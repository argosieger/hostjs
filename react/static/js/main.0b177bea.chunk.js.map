{"version":3,"sources":["components/Alert.tsx","context/AppContext.ts","components/Footer.tsx","components/Header.tsx","containers/home/HomeIndex.tsx","configuration.ts","services/identity-service.ts","containers/identity/Login.tsx","containers/identity/Register.tsx","containers/Page404.tsx","containers/Page403.tsx","containers/PageForm.tsx","services/base-service.ts","containers/inventory-types/InventoryTypeCreate.tsx","types/EPageStatus.ts","components/Loader.tsx","containers/inventory-types/InventoryTypeDelete.tsx","containers/inventory-types/InventoryTypeDetails.tsx","containers/inventory-types/InventoryTypeEdit.tsx","containers/inventory-types/InventoryTypeIndex.tsx","containers/employees/EmployeeCreate.tsx","containers/employees/EmployeeDelete.tsx","containers/employees/EmployeeDetails.tsx","containers/employees/EmployeeEdit.tsx","containers/employees/EmployeeIndex.tsx","containers/inventories/InventoryCreate.tsx","containers/inventories/InventoryDelete.tsx","containers/inventories/InventoryDetails.tsx","containers/inventories/InventoryEdit.tsx","containers/inventories/InventoryIndex.tsx","containers/rental-types/RentalTypeCreate.tsx","containers/rental-types/RentalTypeDelete.tsx","containers/rental-types/RentalTypeDetails.tsx","containers/rental-types/RentalTypeEdit.tsx","containers/rental-types/RentalTypeIndex.tsx","containers/rentals/RentalCreate.tsx","containers/rentals/RentalDelete.tsx","containers/rentals/RentalDetails.tsx","containers/rentals/RentalEdit.tsx","containers/rentals/RentalIndex.tsx","App.tsx","index.tsx"],"names":["EAlertClass","initialAppState","token","firstName","lastName","role","culture","setAuthInfo","AppContext","React","createContext","AppContextProvider","Provider","Consumer","Footer","className","Header","appState","useContext","changeCulture","localStorage","setItem","window","location","reload","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","aria-haspopup","aria-labelledby","onClick","getItem","clear","logOut","HomeIndex","Alert","props","show","alertClass","message","ApiBaseUrl","IdentityService","apiEndpoint","loginData","loginDataJson","JSON","stringify","this","axios","post","response","ok","status","statusCode","data","error","messages","Axios","create","baseURL","headers","Login","useState","email","password","setLoginData","alertMessage","setAlertMessage","logInClicked","e","a","preventDefault","decoded","jwtDecode","onSubmit","nativeEvent","Danger","htmlFor","value","onChange","target","name","autoComplete","Register","password2","registerInClicked","Page404","Page403","FormView","values","input","handleChange","checked","checkbox","radio","textarea","rows","select","initialFormValues","PageForm","formValues","setFormValues","console","log","BaseService","Authorization","queryParams","url","undefined","param","query","count","get","getAxiosConfiguration","delete","entity","bodyStr","put","EPageStatus","history","useHistory","createClicked","dto","comment","result","push","maxLength","InventoryTypeCreate","Loader","pageStatus","Loading","Error","InventoryTypeDelete","useParams","InventoryType","setInventoryType","setPageStatus","loadData","OK","StatusCodes","UNAUTHORIZED","FORBIDDEN","useEffect","deleteClicked","inventoryCount","InventoryTypeDetails","nameId","commentId","saveClicked","update","InventoryTypeEdit","RowDisplay","InventoryTypeIndex","InventoryTypes","setInventoryTypes","getAll","map","phoneNumber","startDate","endDate","EmployeeCreate","EmployeeDelete","employee","appUserCount","Employee","setEmployee","moment","format","EmployeeDetails","EmployeeEdit","EmployeeIndex","Employees","setEmployees","inventoryTypes","inventoryTypeId","regNumber","isRentedOut","rentalCount","key","InventoryCreate","InventoryDelete","inventory","inventoryType","Inventory","setInventory","InventoryDetails","InventoryEdit","inventoryTypeResult","inventoryResult","InventoryIndex","Inventories","setInventories","RentalTypeCreate","RentalTypeDelete","RentalType","setRentalType","RentalTypeDetails","RentalTypeEdit","RentalTypeIndex","RentalTypes","setRentalTypes","inventories","inventoryId","rentalTypes","rentalTypeId","borrowers","borrowerId","lenders","lenderId","returnedDate","RentalCreate","dataInventory","dataBorrower","dataLender","includeEnded","rentalTypeResult","employeeTypeResult","RentalDelete","rental","rentalType","lender","borrower","Rental","setRental","RentalDetails","RentalEdit","rentalResult","employeeResult","RentalIndex","Rentals","setRentals","temp","App","setAppState","exact","path","component","ReactDOM","render","basename","process","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0b177bea.chunk.js","sourcesContent":["export enum EAlertClass {\n    Primary = 'alert-primary',\n    Secondary = 'alert-secondary',\n    Success = 'alert-success',\n    Danger = 'alert-danger',\n    Warning = 'alert-warning',\n    Info = 'alert-info',\n    Light = 'alert-light',\n    Dark = 'alert-dark',\n}\n\nconst Alert = (props: {show: boolean, message: string, alertClass: EAlertClass }) => {\n    \n    return props.show ? <div className={'alert ' + props.alertClass} role=\"alert\">{props.message}</div> : null;\n}\n\nexport default Alert;","import React from \"react\";\n\nexport interface IAppState {\n    token: string | null;\n    firstName: string;\n    lastName: string;\n    role: string;\n    culture: string;\n\n    setAuthInfo: (\n        token: string | null, \n        firstName: string, \n        lastName: string,\n        role: string,\n        culture: string\n        ) => void;\n}\n\nexport const initialAppState : IAppState = {\n    token: null,\n    firstName: '',\n    lastName: '',\n    role: '',\n    culture: '',\n\n    setAuthInfo: (\n        token: string | null, \n        firstName: string, \n        lastName: string,\n        role: string,\n        culture: string\n        ): void => {}\n}\n\nexport const AppContext = React.createContext<IAppState>(initialAppState);\nexport const AppContextProvider = AppContext.Provider;\nexport const AppContextConsumer = AppContext.Consumer;\n","import React from 'react';\r\n\r\nconst Footer = (): JSX.Element => (\r\n    <footer className=\"border-top footer text-muted\">\r\n        <div className=\"container\">\r\n            &copy; 2021 - RentAll\r\n        </div>\r\n    </footer>\r\n);\r\n\r\nexport default Footer;","import React, { useContext } from \"react\";\r\nimport { NavLink, Redirect } from \"react-router-dom\";\r\nimport { AppContext } from \"../context/AppContext\";\r\n\r\n\r\nconst Header = () => {\r\n    const appState = useContext(AppContext);\r\n    \r\n    const changeCulture = (culture: string) => {\r\n        appState.culture = culture;\r\n        localStorage.setItem('culture', culture);\r\n        window.location.reload();\r\n    }\r\n\r\n    const logOut = () => {\r\n        appState.setAuthInfo(null, '', '', '', localStorage.getItem('culture') ?? 'en-US');\r\n        localStorage.clear();\r\n    \r\n        return (\r\n            <Redirect to=\"/\" />\r\n        );\r\n    }\r\n\r\n    return (\r\n        <header>\r\n            <nav className=\"navbar navbar-expand-sm navbar-toggleable-sm navbar-light border-bottom box-shadow mb-3\">\r\n                <div className=\"container\">\r\n                    <NavLink className=\"navbar-brand text-rentall-logo\" to=\"/\">RentAll</NavLink>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\".navbar-collapse\" aria-controls=\"navbarSupportedContent\"\r\n                    aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"navbar-collapse collapse d-sm-inline-flex justify-content-between\">\r\n                        <ul className=\"navbar-nav flex-grow-1\">\r\n                        {appState.role === 'Admin' ?   \r\n                        <li className=\"nav-item dropdown\">\r\n                            <NavLink className=\"nav-link dropdown-toggle text-light\" to=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                Admin\r\n                            </NavLink>\r\n                            <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                                <NavLink className=\"nav-link text-light\" to=\"/InventoryTypes\">Inventory Types</NavLink>\r\n                                <NavLink className=\"nav-link text-light\" to=\"/RentalTypes\">Rental Types</NavLink>\r\n                            </div>\r\n                        </li> : null}\r\n                            <li className=\"nav-item\">\r\n                                <NavLink className=\"nav-link text-light\" to=\"/Employees\">Employees</NavLink>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <NavLink className=\"nav-link text-light\" to=\"/Inventories\">Inventories</NavLink>\r\n                            </li>\r\n                            {appState.role === 'Admin' ?  \r\n                            <li className=\"nav-item\">\r\n                                <NavLink className=\"nav-link text-light\" to=\"/Rentals\">Rentals</NavLink>\r\n                            </li> : null}\r\n                        </ul>\r\n                        <ul className=\"navbar-nav\">\r\n                            <li className=\"nav-item dropdown\">\r\n                                <NavLink className=\"nav-link dropdown-toggle text-light\" to=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                    {appState.culture !== 'et-EE' ? \"Language\" : \"Keel\"}\r\n                                </NavLink>\r\n                                <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                                    <NavLink className=\"nav-link text-light\" to=\"#\" onClick={() => changeCulture('et-EE')}>Eesti (Eesti)</NavLink>\r\n                                    <NavLink className=\"nav-link text-light\" to=\"#\" onClick={() => changeCulture('en-US')}>English (US)</NavLink>\r\n                                </div>\r\n                            </li>\r\n                            {appState.token === null ?\r\n                            <>\r\n                                <li className=\"nav-item\">\r\n                                    <NavLink className=\"nav-link text-light\" to=\"/identity/Register\">Register</NavLink>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <NavLink className=\"nav-link text-light\" to=\"/identity/Login\">Login</NavLink>\r\n                                </li>\r\n                            </>\r\n                            :\r\n                            <>\r\n                                <li className=\"nav-item\">\r\n                                    <span className=\"nav-link text-light\">\r\n                                        {appState.firstName + ' ' + appState.lastName}&nbsp;\r\n                                        ({appState.role === 'Admin' ? \r\n                                        <span className=\"text-rentall-logo\">{appState.role}</span> \r\n                                        : \r\n                                        appState.role})\r\n                                    </span>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <NavLink className=\"nav-link text-light\" to=\"#\" onClick={() => logOut()}>Logout</NavLink>\r\n                                </li>\r\n                            </>\r\n                            }\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </header>\r\n        );\r\n    }\r\nexport default Header;","const HomeIndex = () => {\n    return (\n        <div className=\"text-center\">\n            <h1 className=\"display-4\">Welcome</h1>\n            <h3 className=\"text-light\">to IT-inventory Rental System</h3>\n            <h1 className=\"display-4 text-rentall-logo\">RentAll</h1>\n        </div>\n    );\n}\n\nexport default HomeIndex;","export const ApiBaseUrl = \"https://rentall.azurewebsites.net/api/v1/\";\n//export const ApiBaseUrl = \"https://localhost:5001/api/v1/\";\n","import { ILoginResponse } from './../types/ILoginResponse';\nimport Axios, { AxiosError } from 'axios';\nimport { ApiBaseUrl } from '../configuration';\nimport { IFetchResponse } from '../types/IFetchResponse';\nimport { IMessages } from '../types/IMessages';\n\nexport abstract class IdentityService {\n    protected static axios = Axios.create({\n        baseURL: ApiBaseUrl,\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    });\n\n    static async Login(apiEndpoint: string, loginData: {email: string, password: string}): Promise<IFetchResponse<ILoginResponse>> {\n        let loginDataJson = JSON.stringify(loginData);\n        try {\n            let response = await this.axios.post<ILoginResponse>(apiEndpoint, loginDataJson);\n            return {\n                ok: response.status <= 299,\n                statusCode: response.status,\n                data: response.data\n            };    \n        }\n        catch (err) {\n            let error = err as AxiosError;\n            return {\n                ok: false,\n                statusCode: error.response?.status ?? 500,\n                messages: (error.response?.data as IMessages).messages,\n            }\n        }\n\n    }\n\n}","import React, { useContext, useState } from \"react\";\nimport { Redirect } from \"react-router\";\nimport Alert, { EAlertClass } from \"../../components/Alert\";\nimport { AppContext } from \"../../context/AppContext\";\nimport { IdentityService } from \"../../services/identity-service\";\nimport jwtDecode from \"jwt-decode\";\n\nconst Login = () => {\n    const appState = useContext(AppContext);\n\n    const [loginData, setLoginData] = useState({ email: '', password: '' });\n    const [alertMessage, setAlertMessage] = useState('');\n    \n    const logInClicked = async (e: Event) => {\n        \n        e.preventDefault();\n        if (loginData.email === '' || loginData.password === '') {\n            setAlertMessage('Empty email or password!');\n        } else {\n            setAlertMessage('');\n            let response = await IdentityService.Login('Account/Login', loginData);\n            if (!response.ok) {\n                setAlertMessage(response.messages![0]);\n            } else {\n                setAlertMessage('');\n                const decoded: any = jwtDecode(response.data!.token);\n                const role = decoded['http://schemas.microsoft.com/ws/2008/06/identity/claims/role'];\n                const culture = localStorage.getItem('culture') ?? 'en-US';\n                appState.setAuthInfo(\n                    response.data!.token, \n                    response.data!.firstName, \n                    response.data!.lastName,\n                    role,\n                    culture);\n                \n                localStorage.setItem('token', response.data!.token);\n                localStorage.setItem('firstName', response.data!.firstName);\n                localStorage.setItem('lastName', response.data!.lastName);\n                localStorage.setItem('role', role);\n                localStorage.setItem('culture', culture);\n            }\n        }\n    }\n\n    return (\n        <>\n            { appState.token !== null ? \n            <Redirect to=\"/\" /> \n            : null}\n            <form onSubmit={(e) => logInClicked(e.nativeEvent)}>\n            <div className=\"row\">\n                <div className=\"col-sm-1 col-md-3\"></div>\n                    <div className=\"col-sm-10 col-md-6\">\n                        <h4>Use a local account to log in</h4>\n                        <section>\n                            <hr />\n                            <Alert show={alertMessage !== ''} message={alertMessage} alertClass={EAlertClass.Danger} />\n                            <div className=\"form-group\">\n                                <label htmlFor=\"Input_Email\">Email</label>\n                                <input value={loginData.email} onChange={e => setLoginData({ ...loginData, email: e.target.value })} className=\"form-control\" type=\"email\" id=\"Input_Email\" name=\"Input.Email\" autoComplete=\"username\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"Input_Password\">Password</label>\n                                <input value={loginData.password} onChange={e => setLoginData({ ...loginData, password: e.target.value })} className=\"form-control\" type=\"password\" id=\"Input_Password\" name=\"Input.Password\" autoComplete=\"current-password\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <button onClick={(e) => logInClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">Log in</button>\n                            </div>\n                        </section>\n                    </div>\n                </div>\n            </form>\n        </>\n    );\n}\n\nexport default Login;","import React, { useContext, useState } from \"react\";\nimport { Redirect } from \"react-router\";\nimport Alert, { EAlertClass } from \"../../components/Alert\";\nimport { AppContext } from \"../../context/AppContext\";\nimport { IdentityService } from \"../../services/identity-service\";\nimport jwtDecode from \"jwt-decode\";\n\nconst Register = () => {\n    const appState = useContext(AppContext);\n\n    const [loginData, setLoginData] = useState({ email: '', password: '', password2: '' });\n    const [alertMessage, setAlertMessage] = useState('');\n\n    const registerInClicked = async (e: Event) => {\n        e.preventDefault();\n        if (loginData.email === '' || loginData.password === '') {\n            setAlertMessage('Empty email or password!');\n        } else if (loginData.password !== loginData.password2) {\n            setAlertMessage('Passwords does not match!');\n        } else {\n            setAlertMessage('');\n            let response = await IdentityService.Login('Account/Register', loginData);\n            if (!response.ok) {\n                setAlertMessage(response.messages![0]);\n            } else {\n                setAlertMessage('');\n                const decoded: any = jwtDecode(response.data!.token);\n                const role = decoded['http://schemas.microsoft.com/ws/2008/06/identity/claims/role'];\n                appState.setAuthInfo(\n                    response.data!.token, \n                    response.data!.firstName, \n                    response.data!.lastName,\n                    role,\n                    'en-US');\n            }\n        }\n    }\n\n    return (\n        <>\n            { appState.token !== null ? <Redirect to=\"/\" /> : null}\n            <form onSubmit={(e) => registerInClicked(e.nativeEvent)}>\n            <div className=\"row\">\n                <div className=\"col-sm-1 col-md-3\"></div>\n                    <div className=\"col-sm-10 col-md-6\">\n                        <h4>Use a local account to log in</h4>\n                        <section>\n                            <hr />\n                            <Alert show={alertMessage !== ''} message={alertMessage} alertClass={EAlertClass.Danger} />\n                            <div className=\"form-group\">\n                                <label htmlFor=\"Input_Email\">Email</label>\n                                <input value={loginData.email} onChange={e => setLoginData({ ...loginData, email: e.target.value })} className=\"form-control\" type=\"email\" id=\"Input_Email\" name=\"Input.Email\" autoComplete=\"username\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"Input_Password\">Password</label>\n                                <input value={loginData.password} onChange={e => setLoginData({ ...loginData, password: e.target.value })} className=\"form-control\" type=\"password\" id=\"Input_Password\" name=\"Input.Password\" autoComplete=\"current-password\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"Input_Password_Repeat\">Repeat Password</label>\n                                <input value={loginData.password2} onChange={e => setLoginData({ ...loginData, password2: e.target.value })} className=\"form-control\" type=\"password\" id=\"Input_Password2\" name=\"Input.Password2\" autoComplete=\"current-password\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <button onClick={(e) => registerInClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">Register</button>\n                            </div>\n                        </section>\n                    </div>\n                </div>\n            </form>\n        </>\n    );\n}\n\nexport default Register;","const Page404 = () => {\n    return (\n        <div className=\"text-center\">\n            <h1 className=\"display-4\">Page not found!</h1>\n            <h1 className=\"display-4 text-rentall-logo\">HTTP 404</h1>\n        </div>\n    );\n}\n\nexport default Page404;","const Page403 = () => {\r\n    return (\r\n        <div className=\"text-center\">\r\n            <h1 className=\"text-danger\">Access denied</h1>\r\n            <p className=\"text-danger\">You do not have access to this resource.</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Page403;","import { useState } from \"react\";\n\ninterface IFormValues {\n    input: string;\n    checkbox: boolean;\n    radio: string;\n    textarea: string;\n    select: string;\n}\n\nexport interface IFormProps {\n    values: IFormValues;\n    handleChange: (target: HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement) => void;\n}\n\nconst FormView = (props: IFormProps) => {\n    return (\n        <div className=\"row\">\n        <div className=\"col-sm-1 col-md-3\"></div>\n        <div className=\"col-sm-10 col-md-6\">\n        <form>\n            <div className=\"form-group\">\n                <label htmlFor=\"formInputText\">Text</label>\n                <input className=\"form-control\" value={props.values.input} \n                    onChange={(e) => props.handleChange(e.target)} type=\"text\" id=\"formInputText\" />\n            </div>\n            <div className=\"form-group form-check\">\n                <input className=\"form-check-input\" checked={props.values.checkbox} \n                    onChange={(e) => props.handleChange(e.target)} type=\"checkbox\" id=\"formInputCheckBox\" />\n                <label className=\"form-check-label\" htmlFor=\"formInputCheckBox\">CheckBox</label>\n            </div>\n\n            <div className=\"form-check\">\n                <input className=\"form-check-input\" checked={props.values.radio === 'checked1'} \n                    onChange={(e) => props.handleChange(e.target)} type=\"radio\" id=\"formInputRadio1\" value=\"checked1\" />\n                <label className=\"form-check-label\" htmlFor=\"formInputRadio1\">\n                    Radio 1\n                </label>\n            </div>\n            <div className=\"form-check\">\n                <input className=\"form-check-input\" checked={props.values.radio === 'checked2'} \n                    onChange={(e) => props.handleChange(e.target)} type=\"radio\" id=\"formInputRadio2\" value=\"checked2\" />\n                <label className=\"form-check-label\" htmlFor=\"formInputRadio2\">\n                    Radio 2\n                </label>\n            </div>\n\n            <div className=\"form-group\">\n                <label htmlFor=\"formTextArea\">Textarea</label>\n                <textarea className=\"form-control\" value={props.values.textarea} \n                    onChange={(e) => props.handleChange(e.target)} id=\"formTextArea\" rows={3}></textarea>\n            </div>\n\n            <div className=\"form-group\">\n                <label htmlFor=\"formSelect\">Example select</label>\n                <select className=\"form-control\" value={props.values.select} \n                    onChange={(e) => props.handleChange(e.target)} id=\"formSelect\">\n                    <option>1</option>\n                    <option>2</option>\n                    <option>3</option>\n                </select>\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n        </form>\n        </div>\n        </div>\n    );\n}\nconst initialFormValues: IFormValues = {\n    input: '',\n    checkbox: false,\n    radio: '',\n    textarea: '',\n    select: '',\n};\n\n\n\nconst PageForm = () => {\n    const [formValues, setFormValues] = useState(initialFormValues);\n\n    const handleChange = (target: HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement) => {\n        // todo: update form value\n        console.log(target);\n\n        if (target.id === 'formInputText') {\n            setFormValues({ ...formValues, input: target.value });\n            return;\n        }\n        if (target.id === 'formInputCheckBox') {\n            setFormValues({ ...formValues, checkbox: (target as HTMLInputElement).checked });\n            return;\n        }\n        if (target.id === 'formInputRadio1') {\n            setFormValues({ ...formValues, radio: (target as HTMLInputElement).value });\n            return;\n        }\n        if (target.id === 'formInputRadio2') {\n            setFormValues({ ...formValues, radio: (target as HTMLInputElement).value });\n            return;\n        }\n        if (target.id === 'formTextArea') {\n            setFormValues({ ...formValues, textarea: target.value });\n            return;\n        }\n        if (target.id === 'formSelect') {\n            setFormValues({ ...formValues, select: target.value });\n            return;\n        }\n    }\n\n\n    return <FormView values={formValues} handleChange={handleChange} />\n};\n\nexport default PageForm;","import Axios, { AxiosError, AxiosRequestConfig } from 'axios';\nimport { ApiBaseUrl } from '../configuration';\nimport { IFetchResponse } from '../types/IFetchResponse';\nimport { IMessages } from '../types/IMessages';\nimport { IQueryParams } from '../types/IQueryParams';\n\nexport abstract class BaseService {\n    protected static axios = Axios.create({\n        baseURL: ApiBaseUrl,\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    });\n\n\n    protected static getAxiosConfiguration(token?: string): AxiosRequestConfig | undefined {\n        if (!token)\n            return undefined;\n\n        const config: AxiosRequestConfig = {\n            headers: {\n                Authorization: 'Bearer ' + token\n            }\n        };  \n\n        return config;      \n    }\n\n    static async getAll<TEntity>(apiEndpoint: string, queryParams?: IQueryParams, token?: string): Promise<IFetchResponse<TEntity[]>> {\n        try {\n            let url = apiEndpoint;\n\n            if (queryParams !== undefined) {\n                let query = '';\n                let count = 0;\n                for (const param in queryParams) {\n                    if (!count)\n                        query = query  + \"?\" + param + \"=\" + queryParams[param];\n                    else\n                        query = query  + \"&\" + param + \"=\" + queryParams[param];\n                    count++; \n                }\n                url = url + query;\n            }\n\n            let response = await this.axios.get<TEntity[]>(url, BaseService.getAxiosConfiguration(token));\n            return {\n                ok: response.status <= 299,\n                statusCode: response.status,\n                data: response.data\n            };    \n        }\n        catch (err) {\n            let error = err as AxiosError;\n\n            return {\n                ok: false,\n                statusCode: error.response?.status ?? 500,\n                messages: (error.response?.data as IMessages).messages,\n            }\n        }\n    }\n\n    static async get<TEntity>(id: string, apiEndpoint: string, queryParams?: IQueryParams, token?: string): Promise<IFetchResponse<TEntity>> {\n        try {\n            let url = apiEndpoint + '/' + id;\n            if (queryParams !== undefined) {\n                let query = '?';\n                let count = 0;\n                for (const param in queryParams) {\n                    if (!count)\n                        query = query  + \"?\" + param + \"=\" + queryParams[param];\n                    else\n                        query = query  + \"&\" + param + \"=\" + queryParams[param];\n                    count++; \n                }\n                url = url + query;\n            }\n            let response = await this.axios.get<TEntity>(url, BaseService.getAxiosConfiguration(token));\n            return {\n                ok: response.status <= 299,\n                statusCode: response.status,\n                data: response.data\n            };    \n        }\n        catch (err) {\n            let error = err as AxiosError;\n            return {\n                ok: false,\n                statusCode: error.response?.status ?? 500,\n                messages: (error.response?.data as IMessages).messages,\n            }\n        }\n    }\n\n    static async delete<TEntity>(id: string, apiEndpoint: string, token?: string): Promise<IFetchResponse<TEntity>> {\n        try {\n            let url = apiEndpoint + '/' + id\n            let response = await this.axios.delete(url, BaseService.getAxiosConfiguration(token));\n            return {\n                ok: response.status <= 299,\n                statusCode: response.status,\n                data: response.data\n            };    \n        }\n        catch (err) {\n            let error = err as AxiosError;\n            return {\n                ok: false,\n                statusCode: error.response?.status ?? 500,\n                messages: (error.response?.data as IMessages).messages,\n            }\n        }\n    }\n\n    static async create<TEntity>(entity: TEntity, apiEndpoint: string, queryParams?: IQueryParams, token?: string): Promise<IFetchResponse<TEntity>> {\n        try {\n            let url = apiEndpoint;\n            if (queryParams !== undefined) {\n                let query = '?';\n                let count = 0;\n                for (const param in queryParams) {\n                    if (!count)\n                        query = query  + \"?\" + param + \"=\" + queryParams[param];\n                    else\n                        query = query  + \"&\" + param + \"=\" + queryParams[param];\n                    count++; \n                }\n                url = url + query;\n            }\n            const bodyStr = JSON.stringify(entity);\n\n            let response = await this.axios.post(url, bodyStr, BaseService.getAxiosConfiguration(token));\n            return {\n                ok: response.status <= 299,\n                statusCode: response.status,\n                data: response.data\n            };    \n        }\n        catch (err) {\n            let error = err as AxiosError;\n            return {\n                ok: false,\n                statusCode: error.response?.status ?? 500,\n                messages: (error.response?.data as IMessages).messages,\n            }\n        }\n    }\n\n    static async update<TEntity>(id: string, entity: TEntity, apiEndpoint: string, queryParams?: IQueryParams, token?: string): Promise<IFetchResponse<TEntity>> {\n        try {\n            let url = apiEndpoint + '/' + id;\n            if (queryParams !== undefined) {\n                let query = '?';\n                let count = 0;\n                for (const param in queryParams) {\n                    if (!count)\n                        query = query  + \"?\" + param + \"=\" + queryParams[param];\n                    else\n                        query = query  + \"&\" + param + \"=\" + queryParams[param];\n                    count++; \n                }\n                url = url + query;\n            }\n\n            const bodyStr = JSON.stringify(entity);\n\n            let response = await this.axios.put(url, bodyStr, BaseService.getAxiosConfiguration(token));\n            return {\n                ok: response.status <= 299,\n                statusCode: response.status,\n                data: response.data\n            };    \n        }\n        catch (err) {\n            let error = err as AxiosError;\n            return {\n                ok: false,\n                statusCode: error.response?.status ?? 500,\n                messages: (error.response?.data as IMessages).messages,\n            }\n        }\n    }\n\n}","import { useState, useContext } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { IInventoryType } from \"../../dto/IInventoryType\";\nimport { BaseService } from \"../../services/base-service\";\nimport { AppContext } from \"../../context/AppContext\";\nimport Alert, { EAlertClass } from \"../../components/Alert\";\n\n\ninterface IFormValues {\n    name: string;\n    comment?: string;\n}\n\nexport interface IFormProps {\n    values: IFormValues;\n    handleChange: (target: HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement) => void;\n}\n\nconst FormView = (props: IFormProps) => {\n    const history = useHistory();\n    const appState = useContext(AppContext);\n    const [alertMessage, setAlertMessage] = useState('');\n\n    const createClicked = async (e: Event) => {\n        e.preventDefault();\n\n        if (props.values.name !== \"\") {\n            const dto: IInventoryType = {\n                name: props.values.name,\n                comment: props.values.comment ?? undefined\n            }\n    \n            let result = await BaseService.create(dto, 'InventoryTypes', {culture : appState.culture}, appState.token ?? undefined);\n\n            if (result.ok) {\n                history.push(\"/InventoryTypes/Index/\");\n            } else {\n                setAlertMessage(\"Error: \" + result.statusCode);\n            }\n        } else {\n            setAlertMessage('Please fill all required* fields!');\n        }\n        \n    }\n\n    return (\n        <>\n        <h1>Create</h1>\n        <h4>Inventory Type</h4>\n        <hr />\n        <div className=\"row\">\n            <div className=\"col-md-4\">\n            <Alert show={alertMessage !== ''} message={alertMessage} alertClass={EAlertClass.Danger} />\n                <div className=\"form-group\">\n                    <label className=\"control-label\" htmlFor=\"InventoryTypeName\">Name*</label>\n                    <input className=\"form-control\" type=\"text\" value={props.values.name} \n                        onChange={(e) => props.handleChange(e.target)} id=\"InventoryTypeName\" maxLength={64} />\n                </div>\n                <div className=\"form-group\">\n                    <label className=\"control-label\" htmlFor=\"InventoryTypeComment\">Comment</label>\n                    <input className=\"form-control\" type=\"text\" value={props.values.comment} \n                        onChange={(e) => props.handleChange(e.target)} id=\"InventoryTypeComment\" maxLength={256} />\n                </div>\n                <div className=\"form-group\">\n                    <button onClick={(e) => createClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">Create</button>\n                </div>\n                <div>\n                    <Link to={'/InventoryTypes/Index/'}>Back to List</Link>\n                </div>\n            </div>\n        </div>\n        </>\n    );\n}\nconst initialFormValues: IFormValues = {\n    name: '',\n    comment: undefined\n};\n\nconst InventoryTypeCreate = () => {\n    \n    const [formValues, setFormValues] = useState(initialFormValues);\n\n    const handleChange = (target: HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement) => {\n        if (target.id === 'InventoryTypeName') {\n            setFormValues({ ...formValues, name: target.value });\n            return;\n        }\n        if (target.id === 'InventoryTypeComment') {\n            setFormValues({ ...formValues, comment: target.value });\n            return;\n        }\n    }\n\n    return <FormView values={formValues} handleChange={handleChange} />\n};\n\nexport default InventoryTypeCreate;","export enum EPageStatus {\n    Loading = \"Loading...\",\n    Error = \"Error...\",\n    OK = \"Ok\",\n}\n","import { EPageStatus } from \"../types/EPageStatus\";\n\nconst Loader = (props: {pageStatus: EPageStatus, statusCode:  number}) => {\n    if (props.pageStatus === EPageStatus.Loading){\n        return <div className=\"alert alert-primary\" role=\"alert\">Loading...</div>;\n    }\n    if (props.pageStatus === EPageStatus.Error) {\n        return <div className=\"alert alert-danger\" role=\"alert\">Error... {props.statusCode}</div>\n    }\n    return <></>;\n}\n\nexport default Loader;","import { useEffect, useState, useContext } from \"react\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport { IRouteId } from \"../../types/IRouteId\";\nimport Loader from \"../../components/Loader\";\nimport { IInventoryType } from \"../../dto/IInventoryType\";\nimport { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { AppContext } from \"../../context/AppContext\";\nimport { StatusCodes } from \"http-status-codes\";\n\nconst InventoryTypeDelete = () => {\n    // get the router params from hook\n    const history = useHistory();\n\n    const {id} = useParams() as IRouteId; \n    const appState = useContext(AppContext);\n    const inventoryType: IInventoryType = {\n        name: ''\n    };\n\n    const [InventoryType, setInventoryType] = useState(inventoryType as IInventoryType);\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n\n    const loadData = async () => {\n        let result = await BaseService.get<IInventoryType>(id, 'InventoryTypes', {culture : appState.culture}, appState.token ?? undefined);\n\n        if (result.ok && result.data) {\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\n            setInventoryType(result.data);\n        } else {\n            if (result.statusCode === StatusCodes.UNAUTHORIZED)\n                history.push(\"/identity/Login\");\n            if (result.statusCode === StatusCodes.FORBIDDEN)\n                history.push(\"/AccessDenied\");\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n    }\n\n    useEffect(() => {\n        loadData();\n        // eslint-disable-next-line \n    }, []);\n\n    const deleteClicked = async (e: Event) => {\n        e.preventDefault();\n        let result = await BaseService.delete(id, 'InventoryTypes', appState.token ?? undefined);\n        \n        if (result.ok) {\n            history.push(\"/InventoryTypes/Index/\");\n        } else {\n            if (result.statusCode === StatusCodes.UNAUTHORIZED)\n                history.push(\"/identity/Login\");\n            if (result.statusCode === StatusCodes.FORBIDDEN)\n                history.push(\"/AccessDenied\");\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n    }\n\n    return (\n        <>\n        <h1>Delete</h1>\n        {InventoryType.inventoryCount === 0 ?\n        <h3>Are you sure you want to delete this?</h3> : \n        <h3 className=\"text-danger\">You can't delete this Inventory Type</h3>\n        }\n        <h4>Inventory Type</h4>\n        <hr />\n        <Loader {...pageStatus} />\n        <dl className=\"row\">\n            <dt className=\"col-sm-4 col-lg-2\">Name</dt>\n            <dd className=\"col-sm-8 col-lg-10\">\n            {InventoryType.name} \n            </dd>\n            <dt className=\"col-sm-4 col-lg-2\">Comment</dt>\n            <dd className=\"col-sm-8 col-lg-10\">\n            {InventoryType.comment}    \n            </dd>\n            <dt className=\"col-sm-4 col-lg-2\">Inventory Count</dt>\n            <dd className=\"col-sm-8 col-lg-10\">\n            {InventoryType.inventoryCount}\n            </dd>\n        </dl>\n        <div className=\"form-group\">\n        {InventoryType.inventoryCount === 0 ? \n            <span> <button onClick={(e) => deleteClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-danger\">Delete</button> | </span> : null}\n            <Link to={'/InventoryTypes/Index/'}>Back to List</Link>\n        </div>\n        </>\n    );\n}\n\nexport default InventoryTypeDelete;","import { useEffect, useState, useContext } from \"react\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport { IRouteId } from \"../../types/IRouteId\";\nimport Loader from \"../../components/Loader\";\nimport { IInventoryType } from \"../../dto/IInventoryType\";\nimport { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { AppContext } from \"../../context/AppContext\";\nimport { StatusCodes } from \"http-status-codes\";\n\nconst InventoryTypeDetails = () => {\n    // get the router params from hook\n\n    const history = useHistory();\n    const {id} = useParams() as IRouteId; \n    const appState = useContext(AppContext);\n    const inventoryType: IInventoryType = {\n        name: ''\n    };\n\n    const [InventoryType, setInventoryType] = useState(inventoryType as IInventoryType);\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n\n    const loadData = async () => {\n        let result = await BaseService.get<IInventoryType>(id, 'InventoryTypes', {culture : appState.culture}, appState.token ?? undefined);\n\n        if (result.ok && result.data) {\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\n            setInventoryType(result.data);\n        } else {\n            if (result.statusCode === StatusCodes.UNAUTHORIZED)\n                history.push(\"/identity/Login\");\n            if (result.statusCode === StatusCodes.FORBIDDEN)\n                history.push(\"/AccessDenied\");\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n    }\n\n    useEffect(() => {\n        loadData();\n        // eslint-disable-next-line \n    }, []);\n\n    return (\n        <>\n        <h1>Details</h1>\n        <h4>Inventory Type</h4>\n        <hr />\n        <Loader {...pageStatus} />\n        <dl className=\"row\">\n            <dt className=\"col-sm-4 col-lg-2\">Name</dt>\n            <dd className=\"col-sm-8 col-lg-10\">\n            {InventoryType.name} \n            </dd>\n            <dt className=\"col-sm-4 col-lg-2\">Comment</dt>\n            <dd className=\"col-sm-8 col-lg-10\">\n            {InventoryType.comment}    \n            </dd>\n            <dt className=\"col-sm-4 col-lg-2\">Inventory Count</dt>\n            <dd className=\"col-sm-8 col-lg-10\">\n            {InventoryType.inventoryCount}\n            </dd>\n        </dl>\n        <div>\n            <Link to={'/InventoryTypes/Index/'}>Back to List</Link>\n        </div>\n        </>\n    );\n}\n\nexport default InventoryTypeDetails;","import { useParams } from \"react-router-dom\";\nimport { IRouteId } from \"../../types/IRouteId\";\nimport { useEffect, useState, useContext } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { IInventoryType } from \"../../dto/IInventoryType\";\nimport { BaseService } from \"../../services/base-service\";\nimport { AppContext } from \"../../context/AppContext\";\nimport Alert, { EAlertClass } from \"../../components/Alert\";\nimport { StatusCodes } from \"http-status-codes\";\n\ninterface IFormValues {\n    id?: string;\n    name: string;\n    comment?: string;\n    nameId?: string;\n    commentId?: string;\n}\n\nconst initialFormValues: IFormValues = {\n    id: \"\",\n    name: \"\",\n    comment: undefined,\n    nameId: \"\",\n    commentId: \"\",\n};\n\nexport interface IFormProps {\n    values: IFormValues;\n    handleChange: (target: HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement) => void;\n}\n\nconst FormView = (props: IFormProps) => {\n    const history = useHistory();\n    const appState = useContext(AppContext);\n    const [alertMessage, setAlertMessage] = useState('');\n    const {id} = useParams() as IRouteId; \n\n    const saveClicked = async (e: Event) => {\n        e.preventDefault();\n\n        if (props.values.name !== \"\") {\n            const dto: IInventoryType = {\n                id: id,\n                name: props.values.name,\n                comment: props.values.comment === \"\" ? undefined : props.values.comment,\n                nameId: props.values.nameId,\n                commentId: props.values.commentId\n            }\n\n            let result = await BaseService.update(id, dto, 'InventoryTypes', {culture : appState.culture}, appState.token ?? undefined);\n\n            if (result.ok) {\n                history.push(\"/InventoryTypes/Index/\");\n            } else {\n                setAlertMessage(\"Error: \" + result.statusCode);\n            }\n        } else {\n            setAlertMessage('Please fill all required* fields!');\n        }\n    }\n\n    return (\n        <>\n        <h1>Edit</h1>\n        <h4>Inventory Type</h4>\n        <hr />\n        <div className=\"row\">\n            <div className=\"col-md-4\">\n            <Alert show={alertMessage !== ''} message={alertMessage} alertClass={EAlertClass.Danger} />\n                <div className=\"form-group\">\n                    <label className=\"control-label\" htmlFor=\"InventoryTypeName\">Name*</label>\n                    <input className=\"form-control\" type=\"text\" value={props.values.name} \n                        onChange={(e) => props.handleChange(e.target)} id=\"InventoryTypeName\" maxLength={64} />\n                </div>\n                <div className=\"form-group\">\n                    <label className=\"control-label\" htmlFor=\"InventoryTypeComment\">Comment</label>\n                    <input className=\"form-control\" type=\"text\" value={props.values.comment} \n                        onChange={(e) => props.handleChange(e.target)} id=\"InventoryTypeComment\" maxLength={256} />\n                </div>\n                <div className=\"form-group\">\n                    <button onClick={(e) => saveClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">Save</button>\n                </div>\n                <div>\n                    <Link to={'/InventoryTypes/Index/'}>Back to List</Link>\n                </div>\n            </div>\n        </div>\n        </>\n    );\n}\n\nconst InventoryTypeEdit = () => {\n    const history = useHistory();\n    const appState = useContext(AppContext);\n    const {id} = useParams() as IRouteId;\n    const [formValues, setFormValues] = useState(initialFormValues);\n\n    const loadData = async () => {\n        let result = await BaseService.get<IInventoryType>(id, 'InventoryTypes', {culture : appState.culture}, appState.token ?? undefined);\n\n        if (result.ok && result.data) {\n            setFormValues(\n                { ...formValues, \n                    id: result.data.id,\n                    name: result.data.name, \n                    comment: result.data.comment,\n                    nameId: result.data.nameId,\n                    commentId: result.data.commentId,\n                });\n\n        } else {\n            if (result.statusCode === StatusCodes.UNAUTHORIZED)\n                history.push(\"/identity/Login\");\n            if (result.statusCode === StatusCodes.FORBIDDEN)\n                history.push(\"/AccessDenied\");\n            // setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n    }\n\n    useEffect(() => {\n        loadData();\n        // eslint-disable-next-line \n    }, []);\n\n    const handleChange = (target: HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement) => {\n        if (target.id === 'InventoryTypeName') {\n            setFormValues({ ...formValues, name: target.value });\n            return;\n        }\n        if (target.id === 'InventoryTypeComment') {\n            setFormValues({ ...formValues, comment: target.value });\n            return;\n        }\n    }\n\n    return <FormView values={formValues} handleChange={handleChange} />\n};\n\nexport default InventoryTypeEdit;","import { useEffect, useState, useContext } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport Loader from \"../../components/Loader\";\nimport { IInventoryType } from \"../../dto/IInventoryType\";\nimport { BaseService } from \"../../services/base-service\";\nimport { EPageStatus } from \"../../types/EPageStatus\";\nimport { AppContext } from \"../../context/AppContext\";\nimport { StatusCodes } from 'http-status-codes';\n\nconst RowDisplay = (props: { InventoryType: IInventoryType }) => {\n    const appState = useContext(AppContext);\n    \n    return (\n        <tr>\n            <td>\n                {props.InventoryType.name}\n            </td>\n            <td>\n                {props.InventoryType.comment}\n            </td>\n            <td className=\"text-center\">\n                {props.InventoryType.inventoryCount}\n            </td>\n            <td>\n            {appState.role === 'Admin' ?\n                <>\n                <Link to={'/InventoryTypes/Edit/' + props.InventoryType.id}>Edit</Link> |&nbsp;\n                <Link to={'/InventoryTypes/Details/' + props.InventoryType.id}>Details</Link> |&nbsp;\n                <Link to={'/InventoryTypes/Delete/' + props.InventoryType.id}>Delete</Link>\n                </>\n            :\n            <>\n                <Link to={'/InventoryTypes/Details/' + props.InventoryType.id}>Details</Link>\n            </>\n            }\n            </td>\n        </tr>\n    );\n}\n\nconst InventoryTypeIndex = () => {\n    const history = useHistory();\n    const appState = useContext(AppContext);\n\n    const [InventoryTypes, setInventoryTypes] = useState([] as IInventoryType[]);\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\n\n    const loadData = async () => {\n        let result = await BaseService.getAll<IInventoryType>('InventoryTypes', {culture : appState.culture}, appState.token ?? undefined);\n\n        if (result.ok && result.data) {\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\n            setInventoryTypes(result.data);\n        } else {\n            if (result.statusCode === StatusCodes.UNAUTHORIZED)\n                history.push(\"/identity/Login\");\n            if (result.statusCode === StatusCodes.FORBIDDEN)\n                history.push(\"/AccessDenied\");\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\n        }\n    }\n    \n    useEffect(() => {\n        loadData();\n        // eslint-disable-next-line \n    }, []);\n\n    return (\n        <>\n            <h1>Inventory Types</h1>\n            {appState.role === 'Admin' ?\n            <p><Link to={'/InventoryTypes/Create/'}>Create New</Link></p> : null }\n            <Loader {...pageStatus} />\n            <table className=\"table\">\n                <thead>\n                    <tr>\n                        <th>\n                            Name\n                        </th>\n                        <th>\n                            Comment\n                        </th>\n                        <th className=\"text-center\">\n                            Inventory Count\n                        </th>\n                        <th></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {InventoryTypes.map(InventoryType =>\n                        <RowDisplay InventoryType={InventoryType} key={InventoryType.id} />)\n                    }\n                </tbody>\n            </table>\n        </>\n    );\n}\n\nexport default InventoryTypeIndex;","import { useState, useContext } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { IEmployee } from \"../../dto/IEmployee\";\r\nimport { BaseService } from \"../../services/base-service\";\r\nimport { AppContext } from \"../../context/AppContext\";\r\nimport Alert, { EAlertClass } from \"../../components/Alert\";\r\n\r\ninterface IFormValues {\r\n    firstName: string;\r\n    lastName: string;\r\n    email: string;\r\n    phoneNumber?: string;\r\n    startDate: string;\r\n    endDate?: string;\r\n}\r\n\r\nconst initialFormValues: IFormValues = {\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    phoneNumber: undefined,\r\n    startDate: '',\r\n    endDate: ''\r\n};\r\n\r\nexport interface IFormProps {\r\n    values: IFormValues;\r\n    handleChange: (target: HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement) => void;\r\n}\r\n\r\nconst FormView = (props: IFormProps) => {\r\n    const history = useHistory();\r\n    const appState = useContext(AppContext);\r\n    const [alertMessage, setAlertMessage] = useState('');\r\n\r\n    const createClicked = async (e: Event) => {\r\n        e.preventDefault();\r\n\r\n        if (props.values.firstName !== \"\" && props.values.lastName !== \"\" \r\n            && props.values.email !== \"\" && props.values.startDate !== \"\") {\r\n            const dto: IEmployee = {\r\n                firstName: props.values.firstName,\r\n                lastName: props.values.lastName,\r\n                email: props.values.email,\r\n                phoneNumber: props.values.phoneNumber ?? undefined,\r\n                startDate: props.values.startDate,\r\n                endDate: props.values.endDate === \"\" ? undefined : props.values.endDate\r\n            }\r\n    \r\n            let result = await BaseService.create(dto, 'Employees', {culture : appState.culture}, appState.token ?? undefined);\r\n\r\n            if (result.ok) {\r\n                history.push(\"/Employees/Index/\");\r\n            } else {\r\n                setAlertMessage(\"Error: \" + result.statusCode);\r\n            }\r\n        } else {\r\n            setAlertMessage('Please fill all required* fields!');\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <>\r\n        <h1>Create</h1>\r\n        <h4>Employee</h4>\r\n        <hr />\r\n        <div className=\"row\">\r\n            <div className=\"col-md-4\">\r\n            <Alert show={alertMessage !== ''} message={alertMessage} alertClass={EAlertClass.Danger} />\r\n                <div className=\"form-group\">\r\n                    <label className=\"control-label\" htmlFor=\"FirstName\">First Name*</label>\r\n                    <input className=\"form-control\" type=\"text\" value={props.values.firstName} \r\n                        onChange={(e) => props.handleChange(e.target)} id=\"FirstName\" maxLength={64} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"control-label\" htmlFor=\"LastName\">First Name*</label>\r\n                    <input className=\"form-control\" type=\"text\" value={props.values.lastName} \r\n                        onChange={(e) => props.handleChange(e.target)} id=\"LastName\" maxLength={64} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"control-label\" htmlFor=\"Email\">Email*</label>\r\n                    <input className=\"form-control\" type=\"email\" value={props.values.email} \r\n                        onChange={(e) => props.handleChange(e.target)} id=\"Email\" maxLength={64} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"control-label\" htmlFor=\"Phone\">Phone</label>\r\n                    <input className=\"form-control\" type=\"tel\" value={props.values.phoneNumber} \r\n                        onChange={(e) => props.handleChange(e.target)} id=\"Phone\" maxLength={16} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"control-label\" htmlFor=\"StartDate\">StartDate*</label>\r\n                    <input className=\"form-control\" type=\"date\" value={props.values.startDate} \r\n                        onChange={(e) => props.handleChange(e.target)} id=\"StartDate\" />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"control-label\" htmlFor=\"EndDate\">EndDate</label>\r\n                    <input className=\"form-control\" type=\"date\" value={props.values.endDate} \r\n                        onChange={(e) => props.handleChange(e.target)} id=\"EndDate\" />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <button onClick={(e) => createClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">Create</button>\r\n                </div>\r\n                <div>\r\n                    <Link to={'/Employees/Index/'}>Back to List</Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nconst EmployeeCreate = () => {\r\n    \r\n    const [formValues, setFormValues] = useState(initialFormValues);\r\n\r\n    const handleChange = (target: HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement) => {\r\n        if (target.id === 'FirstName') {\r\n            setFormValues({ ...formValues, firstName: target.value });\r\n            return;\r\n        }\r\n        if (target.id === 'LastName') {\r\n            setFormValues({ ...formValues, lastName: target.value });\r\n            return;\r\n        }\r\n        if (target.id === 'Email') {\r\n            setFormValues({ ...formValues, email: target.value });\r\n            return;\r\n        }\r\n        if (target.id === 'Phone') {\r\n            setFormValues({ ...formValues, phoneNumber: target.value });\r\n            return;\r\n        }\r\n        if (target.id === 'StartDate') {\r\n            setFormValues({ ...formValues, startDate: target.value });\r\n            return;\r\n        }\r\n        if (target.id === 'EndDate') {\r\n            setFormValues({ ...formValues, endDate: target.value });\r\n            return;\r\n        }\r\n    }\r\n\r\n    return <FormView values={formValues} handleChange={handleChange} />\r\n};\r\n\r\nexport default EmployeeCreate;","import { useEffect, useState, useContext } from \"react\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport { IRouteId } from \"../../types/IRouteId\";\r\nimport Loader from \"../../components/Loader\";\r\nimport { IEmployee } from \"../../dto/IEmployee\";\r\nimport { BaseService } from \"../../services/base-service\";\r\nimport { EPageStatus } from \"../../types/EPageStatus\";\r\nimport { AppContext } from \"../../context/AppContext\";\r\nimport moment from 'moment';\r\nimport { StatusCodes } from \"http-status-codes\";\r\n\r\nconst EmployeeDelete = () => {\r\n    // get the router params from hook\r\n    const history = useHistory();\r\n\r\n    const {id} = useParams() as IRouteId; \r\n    const appState = useContext(AppContext);\r\n    const employee: IEmployee = {\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        phoneNumber: undefined,\r\n        startDate: '',\r\n        endDate: '',\r\n        appUserCount: undefined\r\n    };\r\n\r\n    const [Employee, setEmployee] = useState(employee as IEmployee);\r\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\r\n\r\n    const loadData = async () => {\r\n        let result = await BaseService.get<IEmployee>(id, 'Employees', {culture : appState.culture}, appState.token ?? undefined);\r\n\r\n        if (result.ok && result.data) {\r\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\r\n            setEmployee(result.data);\r\n        } else {\r\n            if (result.statusCode === StatusCodes.UNAUTHORIZED)\r\n                history.push(\"/identity/Login\");\r\n            if (result.statusCode === StatusCodes.FORBIDDEN)\r\n                history.push(\"/AccessDenied\");\r\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadData();\r\n        // eslint-disable-next-line \r\n    }, []);\r\n\r\n    const deleteClicked = async (e: Event) => {\r\n        e.preventDefault();\r\n        let result = await BaseService.delete(id, 'Employees', appState.token ?? undefined);\r\n        \r\n        if (result.ok) {\r\n            history.push(\"/Employees/Index/\");\r\n        } else {\r\n            if (result.statusCode === StatusCodes.UNAUTHORIZED)\r\n                history.push(\"/identity/Login\");\r\n            if (result.statusCode === StatusCodes.FORBIDDEN)\r\n                history.push(\"/AccessDenied\");\r\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <h1>Delete</h1>\r\n        {Employee.appUserCount === 0 ?\r\n        <h3>Are you sure you want to delete this?</h3> : \r\n        <h3 className=\"text-danger\">You can't delete this Employee</h3>\r\n        }\r\n        <h4>Employee</h4>\r\n        <hr />\r\n        <Loader {...pageStatus} />\r\n        <dl className=\"row\">\r\n            <dt className=\"col-sm-4 col-lg-2\">First Name</dt>\r\n            <dd className=\"col-sm-8 col-lg-10\">\r\n            {Employee.firstName} \r\n            </dd>\r\n            <dt className=\"col-sm-4 col-lg-2\">Last Name</dt>\r\n            <dd className=\"col-sm-8 col-lg-10\">\r\n            {Employee.lastName}    \r\n            </dd>\r\n            <dt className=\"col-sm-4 col-lg-2\">Email</dt>\r\n            <dd className=\"col-sm-8 col-lg-10\">\r\n            {Employee.email} \r\n            </dd>\r\n            {appState.token !== null ?\r\n            <>\r\n            <dt className=\"col-sm-4 col-lg-2\">Phone</dt>\r\n            <dd className=\"col-sm-8 col-lg-10\">\r\n            {Employee.phoneNumber} \r\n            </dd>\r\n            <dt className=\"col-sm-4 col-lg-2\">Start Date</dt>\r\n            <dd className=\"col-sm-8 col-lg-10\">\r\n            {moment(Employee.startDate).format('DD.MM.YYYY')}    \r\n            </dd>\r\n            <dt className=\"col-sm-4 col-lg-2\">End Date</dt>\r\n            <dd className=\"col-sm-8 col-lg-10\">\r\n            {Employee.endDate ? moment(Employee.endDate).format('DD.MM.YYYY') : ''}    \r\n            </dd>\r\n            </> : null }\r\n            {appState.role === 'Admin' ?\r\n            <>\r\n            <dt className=\"col-sm-4 col-lg-2\">Is AppUser</dt>\r\n            <dd className=\"col-sm-8 col-lg-10\">\r\n            {Employee.appUserCount ? \"Yes\" : \"No\"}\r\n            </dd>\r\n            {Employee.appUserCount ?\r\n            <>\r\n            <dt className=\"col-sm-4 col-lg-2\">Role</dt>\r\n            <dd className=\"col-sm-8 col-lg-10\">\r\n            {Employee.role}\r\n            </dd>\r\n            </> : null }\r\n            </> : null }\r\n        </dl>\r\n        <div className=\"form-group\">\r\n        {Employee.appUserCount === 0 ? \r\n            <span> <button onClick={(e) => deleteClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-danger\">Delete</button> | </span> : null}\r\n            <Link to={'/Employees/Index/'}>Back to List</Link>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default EmployeeDelete;","import { useEffect, useState, useContext } from \"react\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport { IRouteId } from \"../../types/IRouteId\";\r\nimport Loader from \"../../components/Loader\";\r\nimport { IEmployee } from \"../../dto/IEmployee\";\r\nimport { BaseService } from \"../../services/base-service\";\r\nimport { EPageStatus } from \"../../types/EPageStatus\";\r\nimport { AppContext } from \"../../context/AppContext\";\r\nimport moment from 'moment';\r\nimport { StatusCodes } from \"http-status-codes\";\r\n\r\nconst EmployeeDetails = () => {\r\n    // get the router params from hook\r\n    const history = useHistory();\r\n    const {id} = useParams() as IRouteId; \r\n    const appState = useContext(AppContext);\r\n    const employee: IEmployee = {\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        phoneNumber: undefined,\r\n        startDate: '',\r\n        endDate: '',\r\n        appUserCount: undefined\r\n    };\r\n\r\n    const [Employee, setEmployee] = useState(employee as IEmployee);\r\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\r\n\r\n    const loadData = async () => {\r\n        let result = await BaseService.get<IEmployee>(id, 'Employees', {culture : appState.culture}, appState.token ?? undefined);\r\n\r\n        if (result.ok && result.data) {\r\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\r\n            setEmployee(result.data);\r\n        } else {\r\n            if (result.statusCode === StatusCodes.UNAUTHORIZED)\r\n                history.push(\"/identity/Login\");\r\n            if (result.statusCode === StatusCodes.FORBIDDEN)\r\n                history.push(\"/AccessDenied\");\r\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadData();\r\n        // eslint-disable-next-line \r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n        <h1>Details</h1>\r\n        <h4>Employee</h4>\r\n        <hr />\r\n        <Loader {...pageStatus} />\r\n        <dl className=\"row\">\r\n            <dt className=\"col-sm-4 col-lg-2\">First Name</dt>\r\n            <dd className=\"col-sm-8 col-lg-10\">\r\n            {Employee.firstName} \r\n            </dd>\r\n            <dt className=\"col-sm-4 col-lg-2\">Last Name</dt>\r\n            <dd className=\"col-sm-8 col-lg-10\">\r\n            {Employee.lastName}    \r\n            </dd>\r\n            <dt className=\"col-sm-4 col-lg-2\">Email</dt>\r\n            <dd className=\"col-sm-8 col-lg-10\">\r\n            {Employee.email} \r\n            </dd>\r\n            {appState.token !== null ?\r\n            <>\r\n            <dt className=\"col-sm-4 col-lg-2\">Phone</dt>\r\n            <dd className=\"col-sm-8 col-lg-10\">\r\n            {Employee.phoneNumber} \r\n            </dd>\r\n            <dt className=\"col-sm-4 col-lg-2\">Start Date</dt>\r\n            <dd className=\"col-sm-8 col-lg-10\">\r\n            {moment(Employee.startDate).format('DD.MM.YYYY')}    \r\n            </dd>\r\n            <dt className=\"col-sm-4 col-lg-2\">End Date</dt>\r\n            <dd className=\"col-sm-8 col-lg-10\">\r\n            {Employee.endDate ? moment(Employee.endDate).format('DD.MM.YYYY') : ''}    \r\n            </dd>\r\n            </> : null }\r\n            {appState.role === 'Admin' ?\r\n            <>\r\n            <dt className=\"col-sm-4 col-lg-2\">Is AppUser</dt>\r\n            <dd className=\"col-sm-8 col-lg-10\">\r\n            {Employee.appUserCount ? \"Yes\" : \"No\"}\r\n            </dd>\r\n            {Employee.appUserCount ?\r\n            <>\r\n            <dt className=\"col-sm-4 col-lg-2\">Role</dt>\r\n            <dd className=\"col-sm-8 col-lg-10\">\r\n            {Employee.role}\r\n            </dd>\r\n            </> : null }\r\n            </> : null }\r\n        </dl>\r\n        <div>\r\n            <Link to={'/Employees/Index/'}>Back to List</Link>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default EmployeeDetails;","import { useParams } from \"react-router-dom\";\r\nimport { IRouteId } from \"../../types/IRouteId\";\r\nimport { useEffect, useState, useContext } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { IEmployee } from \"../../dto/IEmployee\";\r\nimport { BaseService } from \"../../services/base-service\";\r\nimport { AppContext } from \"../../context/AppContext\";\r\nimport Alert, { EAlertClass } from \"../../components/Alert\";\r\nimport moment from 'moment';\r\nimport { StatusCodes } from \"http-status-codes\";\r\n\r\ninterface IFormValues {\r\n    id?: string;\r\n    firstName: string;\r\n    lastName: string;\r\n    email: string;\r\n    phoneNumber?: string;\r\n    startDate: string;\r\n    endDate?: string;\r\n}\r\n\r\nconst initialFormValues: IFormValues = {\r\n    id: \"\",\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    phoneNumber: undefined,\r\n    startDate: '',\r\n    endDate: undefined\r\n};\r\n\r\nexport interface IFormProps {\r\n    values: IFormValues;\r\n    handleChange: (target: HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement) => void;\r\n}\r\n\r\nconst FormView = (props: IFormProps) => {\r\n    const history = useHistory();\r\n    const appState = useContext(AppContext);\r\n    const [alertMessage, setAlertMessage] = useState('');\r\n    const {id} = useParams() as IRouteId; \r\n\r\n    const saveClicked = async (e: Event) => {\r\n        e.preventDefault();\r\n\r\n        if (props.values.firstName !== \"\" && props.values.lastName !== \"\" \r\n            && props.values.email !== \"\" && props.values.startDate !== \"\") {\r\n            const dto: IEmployee = {\r\n                id: id,\r\n                firstName: props.values.firstName,\r\n                lastName: props.values.lastName,\r\n                email: props.values.email,\r\n                phoneNumber: props.values.phoneNumber === \"\" ? undefined : props.values.phoneNumber,\r\n                startDate: props.values.startDate,\r\n                endDate: props.values.endDate === \"\" ? undefined : props.values.endDate,\r\n            }\r\n\r\n            let result = await BaseService.update(id, dto, 'Employees', {culture : appState.culture}, appState.token ?? undefined);\r\n\r\n            if (result.ok) {\r\n                history.push(\"/Employees/Index/\");\r\n            } else {\r\n                setAlertMessage(\"Error: \" + result.statusCode);\r\n            }\r\n        } else {\r\n            setAlertMessage('Please fill all required* fields!');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <h1>Edit</h1>\r\n        <h4>Employee</h4>\r\n        <hr />\r\n        <div className=\"row\">\r\n            <div className=\"col-md-4\">\r\n            <Alert show={alertMessage !== ''} message={alertMessage} alertClass={EAlertClass.Danger} />\r\n            <div className=\"form-group\">\r\n                    <label className=\"control-label\" htmlFor=\"FirstName\">First Name*</label>\r\n                    <input className=\"form-control\" type=\"text\" value={props.values.firstName} \r\n                        onChange={(e) => props.handleChange(e.target)} id=\"FirstName\" maxLength={64} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"control-label\" htmlFor=\"LastName\">First Name*</label>\r\n                    <input className=\"form-control\" type=\"text\" value={props.values.lastName} \r\n                        onChange={(e) => props.handleChange(e.target)} id=\"LastName\" maxLength={64} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"control-label\" htmlFor=\"Email\">Email*</label>\r\n                    <input className=\"form-control\" type=\"email\" value={props.values.email} \r\n                        onChange={(e) => props.handleChange(e.target)} id=\"Email\" maxLength={64} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"control-label\" htmlFor=\"Phone\">Phone</label>\r\n                    <input className=\"form-control\" type=\"tel\" value={props.values.phoneNumber} \r\n                        onChange={(e) => props.handleChange(e.target)} id=\"Phone\" maxLength={16} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"control-label\" htmlFor=\"StartDate\">StartDate*</label>\r\n                    <input className=\"form-control\" type=\"date\" value={props.values.startDate} \r\n                        onChange={(e) => props.handleChange(e.target)} id=\"StartDate\" />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"control-label\" htmlFor=\"EndDate\">EndDate</label>\r\n                    <input className=\"form-control\" type=\"date\" value={props.values.endDate} \r\n                        onChange={(e) => props.handleChange(e.target)} id=\"EndDate\" />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <button onClick={(e) => saveClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">Save</button>\r\n                </div>\r\n                <div>\r\n                    <Link to={'/Employees/Index/'}>Back to List</Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nconst EmployeeEdit = () => {\r\n    const history = useHistory();\r\n    const appState = useContext(AppContext);\r\n    const {id} = useParams() as IRouteId;\r\n    const [formValues, setFormValues] = useState(initialFormValues);\r\n\r\n    const loadData = async () => {\r\n        let result = await BaseService.get<IEmployee>(id, 'Employees', {culture : appState.culture}, appState.token ?? undefined);\r\n\r\n        if (result.ok && result.data) {\r\n            setFormValues(\r\n                { ...formValues, \r\n                    id: result.data.id,\r\n                    firstName: result.data.firstName,\r\n                    lastName: result.data.lastName,\r\n                    email: result.data.email,\r\n                    phoneNumber: result.data.phoneNumber,\r\n                    startDate: moment(result.data.startDate).format('YYYY-MM-DD'),\r\n                    endDate: result.data.endDate !== null ? moment(result.data.endDate).format('YYYY-MM-DD') : undefined,\r\n                });\r\n\r\n        } else {\r\n            if (result.statusCode === StatusCodes.UNAUTHORIZED)\r\n                history.push(\"/identity/Login\");\r\n            if (result.statusCode === StatusCodes.FORBIDDEN)\r\n                history.push(\"/AccessDenied\");\r\n            // setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadData();\r\n        // eslint-disable-next-line \r\n    }, []);\r\n\r\n    const handleChange = (target: HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement) => {\r\n        if (target.id === 'FirstName') {\r\n            setFormValues({ ...formValues, firstName: target.value });\r\n            return;\r\n        }\r\n        if (target.id === 'LastName') {\r\n            setFormValues({ ...formValues, lastName: target.value });\r\n            return;\r\n        }\r\n        if (target.id === 'Email') {\r\n            setFormValues({ ...formValues, email: target.value });\r\n            return;\r\n        }\r\n        if (target.id === 'Phone') {\r\n            setFormValues({ ...formValues, phoneNumber: target.value });\r\n            return;\r\n        }\r\n        if (target.id === 'StartDate') {\r\n            setFormValues({ ...formValues, startDate: target.value });\r\n            return;\r\n        }\r\n        if (target.id === 'EndDate') {\r\n            setFormValues({ ...formValues, endDate: target.value });\r\n            return;\r\n        }\r\n    }\r\n\r\n    return <FormView values={formValues} handleChange={handleChange} />\r\n};\r\n\r\nexport default EmployeeEdit;","import { useEffect, useState, useContext } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Loader from \"../../components/Loader\";\r\nimport { IEmployee } from \"../../dto/IEmployee\";\r\nimport { BaseService } from \"../../services/base-service\";\r\nimport { EPageStatus } from \"../../types/EPageStatus\";\r\nimport { AppContext } from \"../../context/AppContext\";\r\nimport moment from 'moment';\r\nimport { StatusCodes } from \"http-status-codes\";\r\n\r\nconst RowDisplay = (props: { Employee: IEmployee }) => {\r\n    const appState = useContext(AppContext);\r\n    \r\n    return (\r\n        <tr>\r\n            <td>\r\n                {props.Employee.name}\r\n            </td>\r\n            <td>\r\n                {props.Employee.email}\r\n            </td>\r\n            {appState.token !== null ?\r\n            <>\r\n            <td>\r\n                {props.Employee.phoneNumber}\r\n            </td>\r\n            <td>\r\n                {moment(props.Employee.startDate).format('DD.MM.YYYY')}\r\n            </td>\r\n            <td>\r\n                {props.Employee.endDate ? moment(props.Employee.endDate).format('DD.MM.YYYY') : ''}\r\n            </td>\r\n            </> : null }\r\n            {appState.role === 'Admin' ?\r\n            <td className=\"text-center\">\r\n                {props.Employee.appUserCount ? \"Yes\" : \"No\"}\r\n            </td> : null }\r\n            <td>\r\n            {appState.role === 'Admin' ?\r\n                <>\r\n                <Link to={'/Employees/Edit/' + props.Employee.id}>Edit</Link> |&nbsp;\r\n                <Link to={'/Employees/Details/' + props.Employee.id}>Details</Link> |&nbsp;\r\n                <Link to={'/Employees/Delete/' + props.Employee.id}>Delete</Link>\r\n                </>\r\n            :\r\n            <>\r\n                <Link to={'/Employees/Details/' + props.Employee.id}>Details</Link>\r\n            </>\r\n            }\r\n            </td>\r\n        </tr>\r\n    );\r\n}\r\n\r\nconst EmployeeIndex = () => {\r\n    const history = useHistory();\r\n    const appState = useContext(AppContext);\r\n\r\n    const [Employees, setEmployees] = useState([] as IEmployee[]);\r\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\r\n\r\n    const loadData = async () => {\r\n        let result = await BaseService.getAll<IEmployee>('Employees', {culture : appState.culture}, appState.token ?? undefined);\r\n\r\n        if (result.ok && result.data) {\r\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\r\n            setEmployees(result.data);\r\n        } else {\r\n            if (result.statusCode === StatusCodes.UNAUTHORIZED)\r\n                history.push(\"/identity/Login\");\r\n            if (result.statusCode === StatusCodes.FORBIDDEN)\r\n                history.push(\"/AccessDenied\");\r\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\r\n        }\r\n    }\r\n    \r\n    useEffect(() => {\r\n        loadData();\r\n        // eslint-disable-next-line \r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <h1>Employees</h1>\r\n            {appState.role === 'Admin' ?\r\n            <p><Link to={'/Employees/Create/'}>Create New</Link></p> : null }\r\n            <Loader {...pageStatus} />\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>\r\n                            Name\r\n                        </th>\r\n                        <th>\r\n                            Email\r\n                        </th>\r\n                        {appState.token !== null ?\r\n                        <>\r\n                        <th>\r\n                            Phone\r\n                        </th>\r\n                        <th>\r\n                            Start Date\r\n                        </th>\r\n                        <th>\r\n                            End Date\r\n                        </th>\r\n                        </> : null }\r\n                        {appState.role === 'Admin' ?\r\n                        <th className=\"text-center\">\r\n                            Is AppUser\r\n                        </th> : null }\r\n                        <th></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {Employees.map(Employee =>\r\n                        <RowDisplay Employee={Employee} key={Employee.id} />)\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default EmployeeIndex;","import { useState, useContext, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { IInventory } from \"../../dto/IInventory\";\r\nimport { BaseService } from \"../../services/base-service\";\r\nimport { AppContext } from \"../../context/AppContext\";\r\nimport Alert, { EAlertClass } from \"../../components/Alert\";\r\nimport { IInventoryType } from \"../../dto/IInventoryType\";\r\nimport { StatusCodes } from \"http-status-codes\";\r\n\r\ninterface IFormValues {\r\n    name: string;\r\n    inventoryTypes: IInventoryType[];\r\n    inventoryTypeId: string;\r\n    regNumber: string;\r\n    startDate: string;\r\n    endDate?: string;\r\n    comment?: string;\r\n    isRentedOut: boolean;\r\n    rentalCount: number;\r\n    nameId?: string;\r\n    commentId?: string;\r\n}\r\n\r\nconst initialFormValues: IFormValues = {\r\n    name: '',\r\n    inventoryTypes: [],\r\n    inventoryTypeId: '',\r\n    regNumber: '',\r\n    startDate: '',\r\n    endDate: undefined,\r\n    comment: undefined,\r\n    isRentedOut: false,\r\n    rentalCount: 0,\r\n    nameId: undefined,\r\n    commentId: undefined\r\n};\r\n\r\nexport interface IFormProps {\r\n    values: IFormValues;\r\n    handleChange: (target: HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement) => void;\r\n}\r\n\r\nconst FormView = (props: IFormProps) => {\r\n    const history = useHistory();\r\n    const appState = useContext(AppContext);\r\n    const [alertMessage, setAlertMessage] = useState('');\r\n\r\n    const createClicked = async (e: Event) => {\r\n        e.preventDefault();\r\n\r\n        if (props.values.name !== \"\" && props.values.regNumber !== \"\" \r\n            && props.values.inventoryTypeId !== \"\" && props.values.startDate !== \"\") {\r\n            const dto: IInventory = {\r\n                name: props.values.name,\r\n                inventoryTypeId: props.values.inventoryTypeId,\r\n                regNumber: props.values.regNumber,\r\n                isRentedOut: props.values.isRentedOut,\r\n                startDate: props.values.startDate,\r\n                endDate: props.values.endDate === \"\" ? undefined : props.values.endDate,\r\n                comment: props.values.comment,\r\n                nameId: props.values.nameId,\r\n                commentId: props.values.commentId\r\n            }\r\n    \r\n            let result = await BaseService.create(dto, 'Inventories', {culture : appState.culture}, appState.token ?? undefined);\r\n\r\n            if (result.ok) {\r\n                history.push(\"/Inventories/Index/\");\r\n            } else {\r\n                setAlertMessage(\"Error: \" + result.statusCode);\r\n            }\r\n        } else {\r\n            setAlertMessage('Please fill all required* fields!');\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <>\r\n        <h1>Create</h1>\r\n        <h4>Inventory</h4>\r\n        <hr />\r\n        <div className=\"row\">\r\n            <div className=\"col-md-4\">\r\n            <Alert show={alertMessage !== ''} message={alertMessage} alertClass={EAlertClass.Danger} />\r\n                <div className=\"form-group\">\r\n                    <label className=\"control-label\" htmlFor=\"InventoryTypeId\">Inventory Type*</label>\r\n                    <select className=\"form-control\" value={props.values.inventoryTypeId} \r\n                        onChange={(e) => props.handleChange(e.target)} id=\"InventoryTypeId\">\r\n                            <option value=\"\">-- Select Inventory Type --</option>\r\n                            {props.values.inventoryTypes.map((e, key) => {\r\n                            return <option key={key} value={e.id}>{e.name}</option>;\r\n                            })}                    \r\n                    </select>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"control-label\" htmlFor=\"Name\">Name*</label>\r\n                    <input className=\"form-control\" type=\"text\" value={props.values.name} \r\n                        onChange={(e) => props.handleChange(e.target)} id=\"Name\" maxLength={64} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"control-label\" htmlFor=\"RegNumber\">Reg Number*</label>\r\n                    <input className=\"form-control\" type=\"text\" value={props.values.regNumber} \r\n                        onChange={(e) => props.handleChange(e.target)} id=\"RegNumber\" maxLength={64} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"control-label\" htmlFor=\"StartDate\">StartDate*</label>\r\n                    <input className=\"form-control\" type=\"date\" value={props.values.startDate} \r\n                        onChange={(e) => props.handleChange(e.target)} id=\"StartDate\" />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"control-label\" htmlFor=\"EndDate\">EndDate</label>\r\n                    <input className=\"form-control\" type=\"date\" value={props.values.endDate} \r\n                        onChange={(e) => props.handleChange(e.target)} id=\"EndDate\" />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"control-label\" htmlFor=\"Comment\">Comment</label>\r\n                    <input className=\"form-control\" type=\"text\" value={props.values.comment} \r\n                        onChange={(e) => props.handleChange(e.target)} id=\"Comment\" maxLength={256} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <button onClick={(e) => createClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">Create</button>\r\n                </div>\r\n                <div>\r\n                    <Link to={'/Inventories/Index/'}>Back to List</Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nconst InventoryCreate = () => {\r\n    const history = useHistory();\r\n    const appState = useContext(AppContext);\r\n\r\n    const [formValues, setFormValues] = useState(initialFormValues);\r\n    const loadData = async () => {\r\n        let result = await BaseService.getAll<IInventoryType>('InventoryTypes', {culture : appState.culture}, appState.token ?? undefined);\r\n\r\n        if (result.ok && result.data) {\r\n            setFormValues(\r\n                { ...formValues, \r\n                    inventoryTypes: result.data,\r\n                });\r\n\r\n        } else {\r\n            if (result.statusCode === StatusCodes.UNAUTHORIZED)\r\n                history.push(\"/identity/Login\");\r\n            if (result.statusCode === StatusCodes.FORBIDDEN)\r\n                history.push(\"/AccessDenied\");\r\n            // setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadData();\r\n        // eslint-disable-next-line \r\n    }, []);\r\n    \r\n\r\n    const handleChange = (target: HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement) => {\r\n        if (target.id === 'InventoryTypeId') {\r\n            setFormValues({ ...formValues, inventoryTypeId: target.value });\r\n            return;\r\n        }\r\n        if (target.id === 'Name') {\r\n            setFormValues({ ...formValues, name: target.value });\r\n            return;\r\n        }\r\n        if (target.id === 'RegNumber') {\r\n            setFormValues({ ...formValues, regNumber: target.value });\r\n            return;\r\n        }\r\n        if (target.id === 'StartDate') {\r\n            setFormValues({ ...formValues, startDate: target.value });\r\n            return;\r\n        }\r\n        if (target.id === 'EndDate') {\r\n            setFormValues({ ...formValues, endDate: target.value });\r\n            return;\r\n        }\r\n        if (target.id === 'Comment') {\r\n            setFormValues({ ...formValues, comment: target.value });\r\n            return;\r\n        }\r\n    }\r\n\r\n    return <FormView values={formValues} handleChange={handleChange} />\r\n};\r\n\r\nexport default InventoryCreate;","import { useEffect, useState, useContext } from \"react\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport { IRouteId } from \"../../types/IRouteId\";\r\nimport Loader from \"../../components/Loader\";\r\nimport { IInventory } from \"../../dto/IInventory\";\r\nimport { BaseService } from \"../../services/base-service\";\r\nimport { EPageStatus } from \"../../types/EPageStatus\";\r\nimport { AppContext } from \"../../context/AppContext\";\r\nimport moment from 'moment';\r\nimport { StatusCodes } from \"http-status-codes\";\r\n\r\nconst InventoryDelete = () => {\r\n    // get the router params from hook\r\n    const history = useHistory();\r\n\r\n    const {id} = useParams() as IRouteId; \r\n    const appState = useContext(AppContext);\r\n    const inventory: IInventory = {\r\n        name: '',\r\n        inventoryType: undefined,\r\n        inventoryTypeId: '',\r\n        regNumber: '',\r\n        startDate: '',\r\n        endDate: undefined,\r\n        isRentedOut: false,\r\n        rentalCount: undefined\r\n    };\r\n\r\n    const [Inventory, setInventory] = useState(inventory as IInventory);\r\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\r\n\r\n    const loadData = async () => {\r\n        let result = await BaseService.get<IInventory>(id, 'Inventories', {culture : appState.culture}, appState.token ?? undefined);\r\n\r\n        if (result.ok && result.data) {\r\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\r\n            setInventory(result.data);\r\n        } else {\r\n            if (result.statusCode === StatusCodes.UNAUTHORIZED)\r\n                history.push(\"/identity/Login\");\r\n            if (result.statusCode === StatusCodes.FORBIDDEN)\r\n                history.push(\"/AccessDenied\");\r\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadData();\r\n        // eslint-disable-next-line \r\n    }, []);\r\n\r\n    const deleteClicked = async (e: Event) => {\r\n        e.preventDefault();\r\n        let result = await BaseService.delete(id, 'Inventories', appState.token ?? undefined);\r\n        \r\n        if (result.ok) {\r\n            history.push(\"/Inventories/Index/\");\r\n        } else {\r\n            if (result.statusCode === StatusCodes.UNAUTHORIZED)\r\n                history.push(\"/identity/Login\");\r\n            if (result.statusCode === StatusCodes.FORBIDDEN)\r\n                history.push(\"/AccessDenied\");\r\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <h1>Delete</h1>\r\n        {Inventory.rentalCount === 0 ?\r\n        <h3>Are you sure you want to delete this?</h3> : \r\n        <h3 className=\"text-danger\">You can't delete this Inventory</h3>\r\n        }\r\n        <h4>Inventory</h4>\r\n        <hr />\r\n        <Loader {...pageStatus} />\r\n        <dl className=\"row\">\r\n            <dt className=\"col-sm-4 col-lg-2\">Name</dt>\r\n            <dd className=\"col-sm-8 col-lg-10\">\r\n                {Inventory.name} \r\n            </dd>\r\n            <dt className=\"col-sm-4 col-lg-2\">Inventory Type</dt>\r\n            <dd className=\"col-sm-8 col-lg-10\">\r\n                {Inventory.inventoryType?.name}    \r\n            </dd>\r\n            {appState.token !== null ?\r\n            <>\r\n            <dt className=\"col-sm-4 col-lg-2\">Reg Number</dt>\r\n            <dd className=\"col-sm-8 col-lg-10\">\r\n                {Inventory.regNumber} \r\n            </dd>\r\n            <dt className=\"col-sm-4 col-lg-2\">Start Date</dt>\r\n            <dd className=\"col-sm-8 col-lg-10\">\r\n                {moment(Inventory.startDate).format('DD.MM.YYYY')}    \r\n            </dd>\r\n            <dt className=\"col-sm-4 col-lg-2\">End Date</dt>\r\n            <dd className=\"col-sm-8 col-lg-10\">\r\n                {Inventory.endDate ? moment(Inventory.endDate).format('DD.MM.YYYY') : ''}    \r\n            </dd>\r\n            </> : null }\r\n            <dt className=\"col-sm-4 col-lg-2\">Is Rented Out</dt>\r\n            <dd className=\"col-sm-8 col-lg-10\">\r\n                {Inventory.isRentedOut ? \"Yes\" : \"No\"}\r\n            </dd>\r\n        </dl>\r\n        <div className=\"form-group\">\r\n        {Inventory.rentalCount === 0 ? \r\n            <span> <button onClick={(e) => deleteClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-danger\">Delete</button> | </span> : null}\r\n            <Link to={'/Inventories/Index/'}>Back to List</Link>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default InventoryDelete;","import { useEffect, useState, useContext } from \"react\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport { IRouteId } from \"../../types/IRouteId\";\r\nimport Loader from \"../../components/Loader\";\r\nimport { IInventory } from \"../../dto/IInventory\";\r\nimport { BaseService } from \"../../services/base-service\";\r\nimport { EPageStatus } from \"../../types/EPageStatus\";\r\nimport { AppContext } from \"../../context/AppContext\";\r\nimport moment from 'moment';\r\nimport { StatusCodes } from \"http-status-codes\";\r\n\r\nconst InventoryDetails = () => {\r\n    // get the router params from hook\r\n    const history = useHistory();\r\n    const {id} = useParams() as IRouteId; \r\n    const appState = useContext(AppContext);\r\n    const inventory: IInventory = {\r\n        name: '',\r\n        inventoryType: undefined,\r\n        inventoryTypeId: '',\r\n        regNumber: '',\r\n        startDate: '',\r\n        endDate: undefined,\r\n        isRentedOut: false\r\n    };\r\n\r\n    const [Inventory, setInventory] = useState(inventory as IInventory);\r\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\r\n\r\n    const loadData = async () => {\r\n        let result = await BaseService.get<IInventory>(id, 'Inventories', {culture : appState.culture}, appState.token ?? undefined);\r\n\r\n        if (result.ok && result.data) {\r\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\r\n            setInventory(result.data);\r\n        } else {\r\n            if (result.statusCode === StatusCodes.UNAUTHORIZED)\r\n                history.push(\"/identity/Login\");\r\n            if (result.statusCode === StatusCodes.FORBIDDEN)\r\n                history.push(\"/AccessDenied\");\r\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadData();\r\n        // eslint-disable-next-line \r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n        <h1>Details</h1>\r\n        <h4>Inventory</h4>\r\n        <hr />\r\n        <Loader {...pageStatus} />\r\n        <dl className=\"row\">\r\n            <dt className=\"col-sm-4 col-lg-2\">Name</dt>\r\n            <dd className=\"col-sm-8 col-lg-10\">\r\n                {Inventory.name} \r\n            </dd>\r\n            <dt className=\"col-sm-4 col-lg-2\">Inventory Type</dt>\r\n            <dd className=\"col-sm-8 col-lg-10\">\r\n                {Inventory.inventoryType?.name}    \r\n            </dd>\r\n            {appState.token !== null ?\r\n            <>\r\n            <dt className=\"col-sm-4 col-lg-2\">Reg Number</dt>\r\n            <dd className=\"col-sm-8 col-lg-10\">\r\n                {Inventory.regNumber} \r\n            </dd>\r\n            <dt className=\"col-sm-4 col-lg-2\">Start Date</dt>\r\n            <dd className=\"col-sm-8 col-lg-10\">\r\n                {moment(Inventory.startDate).format('DD.MM.YYYY')}    \r\n            </dd>\r\n            <dt className=\"col-sm-4 col-lg-2\">End Date</dt>\r\n            <dd className=\"col-sm-8 col-lg-10\">\r\n                {Inventory.endDate ? moment(Inventory.endDate).format('DD.MM.YYYY') : ''}    \r\n            </dd>\r\n            </> : null }\r\n            <dt className=\"col-sm-4 col-lg-2\">Is Rented Out</dt>\r\n            <dd className=\"col-sm-8 col-lg-10\">\r\n                {Inventory.isRentedOut ? \"Yes\" : \"No\"}\r\n            </dd>\r\n        </dl>\r\n        <div>\r\n            <Link to={'/Inventories/Index/'}>Back to List</Link>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default InventoryDetails;","import { useParams } from \"react-router-dom\";\r\nimport { IRouteId } from \"../../types/IRouteId\";\r\nimport { useEffect, useState, useContext } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { IInventory } from \"../../dto/IInventory\";\r\nimport { IInventoryType } from \"../../dto/IInventoryType\";\r\nimport { BaseService } from \"../../services/base-service\";\r\nimport { AppContext } from \"../../context/AppContext\";\r\nimport Alert, { EAlertClass } from \"../../components/Alert\";\r\nimport moment from 'moment';\r\nimport { StatusCodes } from \"http-status-codes\";\r\n\r\ninterface IFormValues {\r\n    id?: string;\r\n    name: string;\r\n    inventoryTypes: IInventoryType[];\r\n    inventoryTypeId: string;\r\n    regNumber: string;\r\n    startDate: string;\r\n    endDate?: string;\r\n    comment?: string;\r\n    isRentedOut: boolean;\r\n    rentalCount: number;\r\n    nameId?: string;\r\n    commentId?: string;\r\n}\r\n\r\nconst initialFormValues: IFormValues = {\r\n    id: \"\",\r\n    name: '',\r\n    inventoryTypes: [],\r\n    inventoryTypeId: '',\r\n    regNumber: '',\r\n    startDate: '',\r\n    endDate: undefined,\r\n    comment: undefined,\r\n    isRentedOut: false,\r\n    rentalCount: 0,\r\n    nameId: undefined,\r\n    commentId: undefined\r\n};\r\n\r\nexport interface IFormProps {\r\n    values: IFormValues;\r\n    handleChange: (target: HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement) => void;\r\n}\r\n\r\nconst FormView = (props: IFormProps) => {\r\n    const history = useHistory();\r\n    const appState = useContext(AppContext);\r\n    const [alertMessage, setAlertMessage] = useState('');\r\n    const {id} = useParams() as IRouteId; \r\n\r\n    const saveClicked = async (e: Event) => {\r\n        e.preventDefault();\r\n\r\n        if (props.values.name !== \"\" && props.values.regNumber !== \"\" \r\n        && props.values.inventoryTypeId !== \"\" && props.values.startDate !== \"\") {\r\n        const dto: IInventory = {\r\n                id: id,\r\n                name: props.values.name,\r\n                inventoryTypeId: props.values.inventoryTypeId,\r\n                regNumber: props.values.regNumber,\r\n                isRentedOut: props.values.isRentedOut,\r\n                startDate: props.values.startDate,\r\n                endDate: props.values.endDate === \"\" ? undefined : props.values.endDate,\r\n                comment: props.values.comment,\r\n                nameId: props.values.nameId,\r\n                commentId: props.values.commentId\r\n            }\r\n\r\n            let result = await BaseService.update(id, dto, 'Inventories', {culture : appState.culture}, appState.token ?? undefined);\r\n\r\n            if (result.ok) {\r\n                history.push(\"/Inventories/Index/\");\r\n            } else {\r\n                setAlertMessage(\"Error: \" + result.statusCode);\r\n            }\r\n        } else {\r\n            setAlertMessage('Please fill all required* fields!');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <h1>Edit</h1>\r\n        <h4>Inventory</h4>\r\n        <hr />\r\n        <div className=\"row\">\r\n            <div className=\"col-md-4\">\r\n            <Alert show={alertMessage !== ''} message={alertMessage} alertClass={EAlertClass.Danger} />\r\n                <div className=\"form-group\">\r\n                    <label className=\"control-label\" htmlFor=\"InventoryTypeId\">Inventory Type*</label>\r\n                    <select className=\"form-control\" value={props.values.inventoryTypeId} \r\n                        onChange={(e) => props.handleChange(e.target)} id=\"InventoryTypeId\">\r\n                            <option value=\"\">-- Select Inventory Type --</option>\r\n                            {props.values.inventoryTypes.map((e, key) => {\r\n                            return <option key={key} value={e.id}>{e.name}</option>;\r\n                            })}                    \r\n                    </select>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"control-label\" htmlFor=\"Name\">Name*</label>\r\n                    <input className=\"form-control\" type=\"text\" value={props.values.name} \r\n                        onChange={(e) => props.handleChange(e.target)} id=\"Name\" maxLength={64} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"control-label\" htmlFor=\"RegNumber\">Reg Number*</label>\r\n                    <input className=\"form-control\" type=\"text\" value={props.values.regNumber} \r\n                        onChange={(e) => props.handleChange(e.target)} id=\"RegNumber\" maxLength={64} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"control-label\" htmlFor=\"StartDate\">StartDate*</label>\r\n                    <input className=\"form-control\" type=\"date\" value={props.values.startDate} \r\n                        onChange={(e) => props.handleChange(e.target)} id=\"StartDate\" />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"control-label\" htmlFor=\"EndDate\">EndDate</label>\r\n                    <input className=\"form-control\" type=\"date\" value={props.values.endDate} \r\n                        onChange={(e) => props.handleChange(e.target)} id=\"EndDate\" />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"control-label\" htmlFor=\"Comment\">Comment</label>\r\n                    <input className=\"form-control\" type=\"text\" value={props.values.comment} \r\n                        onChange={(e) => props.handleChange(e.target)} id=\"Comment\" maxLength={256} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <button onClick={(e) => saveClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">Save</button>\r\n                </div>\r\n                <div>\r\n                    <Link to={'/Inventories/Index/'}>Back to List</Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nconst InventoryEdit = () => {\r\n    const history = useHistory();\r\n    const appState = useContext(AppContext);\r\n    const {id} = useParams() as IRouteId;\r\n    const [formValues, setFormValues] = useState(initialFormValues);\r\n\r\n    const loadData = async () => {\r\n        let inventoryTypeResult = await BaseService.getAll<IInventoryType>('InventoryTypes', {culture : appState.culture}, appState.token ?? undefined);\r\n\r\n        let inventoryResult = await BaseService.get<IInventory>(id, 'Inventories', {culture : appState.culture}, appState.token ?? undefined);\r\n\r\n        if (inventoryResult.ok && inventoryResult.data && inventoryTypeResult.data) {\r\n            setFormValues(\r\n                { ...formValues, \r\n                    id: inventoryResult.data.id,\r\n                    inventoryTypeId: inventoryResult.data.inventoryTypeId,\r\n                    inventoryTypes: inventoryTypeResult.data,\r\n                    name: inventoryResult.data.name,\r\n                    regNumber: inventoryResult.data.regNumber,\r\n                    startDate: moment(inventoryResult.data.startDate).format('YYYY-MM-DD'),\r\n                    endDate: inventoryResult.data.endDate !== null ? moment(inventoryResult.data.endDate).format('YYYY-MM-DD') : undefined,\r\n                    comment: inventoryResult.data.comment,\r\n                    isRentedOut: inventoryResult.data.isRentedOut,\r\n                    nameId: inventoryResult.data.nameId,\r\n                    commentId: inventoryResult.data.commentId\r\n                });\r\n\r\n        } else {\r\n            if (inventoryTypeResult.statusCode === StatusCodes.UNAUTHORIZED)\r\n                history.push(\"/identity/Login\");\r\n            if (inventoryTypeResult.statusCode === StatusCodes.FORBIDDEN)\r\n                history.push(\"/AccessDenied\");\r\n            // setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadData();\r\n        // eslint-disable-next-line \r\n    }, []);\r\n\r\n    const handleChange = (target: HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement) => {\r\n        if (target.id === 'InventoryTypeId') {\r\n            setFormValues({ ...formValues, inventoryTypeId: target.value });\r\n            return;\r\n        }\r\n        if (target.id === 'Name') {\r\n            setFormValues({ ...formValues, name: target.value });\r\n            return;\r\n        }\r\n        if (target.id === 'RegNumber') {\r\n            setFormValues({ ...formValues, regNumber: target.value });\r\n            return;\r\n        }\r\n        if (target.id === 'StartDate') {\r\n            setFormValues({ ...formValues, startDate: target.value });\r\n            return;\r\n        }\r\n        if (target.id === 'EndDate') {\r\n            setFormValues({ ...formValues, endDate: target.value });\r\n            return;\r\n        }\r\n        if (target.id === 'Comment') {\r\n            setFormValues({ ...formValues, comment: target.value });\r\n            return;\r\n        }\r\n    }\r\n\r\n    return <FormView values={formValues} handleChange={handleChange} />\r\n};\r\n\r\nexport default InventoryEdit;","import { useEffect, useState, useContext } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Loader from \"../../components/Loader\";\r\nimport { IInventory } from \"../../dto/IInventory\";\r\nimport { BaseService } from \"../../services/base-service\";\r\nimport { EPageStatus } from \"../../types/EPageStatus\";\r\nimport { AppContext } from \"../../context/AppContext\";\r\nimport moment from 'moment';\r\nimport { StatusCodes } from \"http-status-codes\";\r\n\r\nconst RowDisplay = (props: { Inventory: IInventory }) => {\r\n    const appState = useContext(AppContext);\r\n    \r\n    return (\r\n        <tr>\r\n            <td>\r\n                {props.Inventory.name}\r\n            </td>\r\n            <td>\r\n                {props.Inventory.inventoryType?.name}\r\n            </td>\r\n                {appState.token !== null ?\r\n            <>\r\n            <td>\r\n                {props.Inventory.regNumber}\r\n            </td>\r\n            <td>\r\n                {moment(props.Inventory.startDate).format('DD.MM.YYYY')}\r\n            </td>\r\n            <td>\r\n                {props.Inventory.endDate ? moment(props.Inventory.endDate).format('DD.MM.YYYY') : ''}\r\n            </td>\r\n            </> : null }\r\n            <td className=\"text-center\">\r\n                {props.Inventory.isRentedOut ? \"Yes\" : \"No\"}\r\n            </td>\r\n            <td>\r\n            {appState.role === 'Admin' ?\r\n                <>\r\n                <Link to={'/Inventories/Edit/' + props.Inventory.id}>Edit</Link> |&nbsp;\r\n                <Link to={'/Inventories/Details/' + props.Inventory.id}>Details</Link> |&nbsp;\r\n                <Link to={'/Inventories/Delete/' + props.Inventory.id}>Delete</Link>\r\n                </>\r\n            :\r\n            <>\r\n                <Link to={'/Inventories/Details/' + props.Inventory.id}>Details</Link>\r\n            </>\r\n            }\r\n            </td>\r\n        </tr>\r\n    );\r\n}\r\n\r\nconst InventoryIndex = () => {\r\n    const history = useHistory();\r\n    const appState = useContext(AppContext);\r\n\r\n    const [Inventories, setInventories] = useState([] as IInventory[]);\r\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\r\n\r\n    const loadData = async () => {\r\n        let result = await BaseService.getAll<IInventory>('Inventories', {culture : appState.culture}, appState.token ?? undefined);\r\n\r\n        if (result.ok && result.data) {\r\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\r\n            setInventories(result.data);\r\n        } else {\r\n            if (result.statusCode === StatusCodes.UNAUTHORIZED)\r\n                history.push(\"/identity/Login\");\r\n            if (result.statusCode === StatusCodes.FORBIDDEN)\r\n                history.push(\"/AccessDenied\");\r\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\r\n        }\r\n    }\r\n    \r\n    useEffect(() => {\r\n        loadData();\r\n        // eslint-disable-next-line \r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <h1>Inventories</h1>\r\n            {appState.role === 'Admin' ?\r\n            <p><Link to={'/Inventories/Create/'}>Create New</Link></p> : null }\r\n            <Loader {...pageStatus} />\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>\r\n                            Name\r\n                        </th>\r\n                        <th>\r\n                            Inventory Type\r\n                        </th>\r\n                            {appState.token !== null ?\r\n                        <>\r\n                        <th>\r\n                            Reg Number\r\n                        </th>\r\n                        <th>\r\n                            Start Date\r\n                        </th>\r\n                        <th>\r\n                            End Date\r\n                        </th>\r\n                        </> : null }\r\n                        <th className=\"text-center\">\r\n                            Is Rented Out\r\n                        </th>\r\n                        <th></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {Inventories.map(Inventory =>\r\n                        <RowDisplay Inventory={Inventory} key={Inventory.id} />)\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default InventoryIndex;","import { useState, useContext } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { IRentalType } from \"../../dto/IRentalType\";\r\nimport { BaseService } from \"../../services/base-service\";\r\nimport { AppContext } from \"../../context/AppContext\";\r\nimport Alert, { EAlertClass } from \"../../components/Alert\";\r\n\r\n\r\ninterface IFormValues {\r\n    name: string;\r\n    comment?: string;\r\n}\r\n\r\nexport interface IFormProps {\r\n    values: IFormValues;\r\n    handleChange: (target: HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement) => void;\r\n}\r\n\r\nconst FormView = (props: IFormProps) => {\r\n    const history = useHistory();\r\n    const appState = useContext(AppContext);\r\n    const [alertMessage, setAlertMessage] = useState('');\r\n\r\n    const createClicked = async (e: Event) => {\r\n        e.preventDefault();\r\n\r\n        if (props.values.name !== \"\") {\r\n            const dto: IRentalType = {\r\n                name: props.values.name,\r\n            }\r\n    \r\n            let result = await BaseService.create(dto, 'RentalTypes', {culture : appState.culture}, appState.token ?? undefined);\r\n\r\n            if (result.ok) {\r\n                history.push(\"/RentalTypes/Index/\");\r\n            } else {\r\n                setAlertMessage(\"Error: \" + result.statusCode);\r\n            }\r\n        } else {\r\n            setAlertMessage('Please fill all required* fields!');\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <>\r\n        <h1>Create</h1>\r\n        <h4>Rental Type</h4>\r\n        <hr />\r\n        <div className=\"row\">\r\n            <div className=\"col-md-4\">\r\n            <Alert show={alertMessage !== ''} message={alertMessage} alertClass={EAlertClass.Danger} />\r\n                <div className=\"form-group\">\r\n                    <label className=\"control-label\" htmlFor=\"RentalTypeName\">Name*</label>\r\n                    <input className=\"form-control\" type=\"text\" value={props.values.name} \r\n                        onChange={(e) => props.handleChange(e.target)} id=\"RentalTypeName\" maxLength={64} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <button onClick={(e) => createClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">Create</button>\r\n                </div>\r\n                <div>\r\n                    <Link to={'/RentalTypes/Index/'}>Back to List</Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\nconst initialFormValues: IFormValues = {\r\n    name: '',\r\n    comment: undefined\r\n};\r\n\r\nconst RentalTypeCreate = () => {\r\n    \r\n    const [formValues, setFormValues] = useState(initialFormValues);\r\n\r\n    const handleChange = (target: HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement) => {\r\n        if (target.id === 'RentalTypeName') {\r\n            setFormValues({ ...formValues, name: target.value });\r\n            return;\r\n        }\r\n    }\r\n\r\n    return <FormView values={formValues} handleChange={handleChange} />\r\n};\r\n\r\nexport default RentalTypeCreate;","import { useEffect, useState, useContext } from \"react\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport { IRouteId } from \"../../types/IRouteId\";\r\nimport Loader from \"../../components/Loader\";\r\nimport { IRentalType } from \"../../dto/IRentalType\";\r\nimport { BaseService } from \"../../services/base-service\";\r\nimport { EPageStatus } from \"../../types/EPageStatus\";\r\nimport { AppContext } from \"../../context/AppContext\";\r\nimport { StatusCodes } from \"http-status-codes\";\r\n\r\nconst RentalTypeDelete = () => {\r\n    // get the router params from hook\r\n    const history = useHistory();\r\n\r\n    const {id} = useParams() as IRouteId; \r\n    const appState = useContext(AppContext);\r\n    const rentalType: IRentalType = {\r\n        name: ''\r\n    };\r\n\r\n    const [RentalType, setRentalType] = useState(rentalType as IRentalType);\r\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\r\n\r\n    const loadData = async () => {\r\n        let result = await BaseService.get<IRentalType>(id, 'RentalTypes', {culture : appState.culture}, appState.token ?? undefined);\r\n\r\n        if (result.ok && result.data) {\r\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\r\n            setRentalType(result.data);\r\n        } else {\r\n            if (result.statusCode === StatusCodes.UNAUTHORIZED)\r\n                history.push(\"/identity/Login\");\r\n            if (result.statusCode === StatusCodes.FORBIDDEN)\r\n                history.push(\"/AccessDenied\");\r\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadData();\r\n        // eslint-disable-next-line \r\n    }, []);\r\n\r\n    const deleteClicked = async (e: Event) => {\r\n        e.preventDefault();\r\n        let result = await BaseService.delete(id, 'RentalTypes', appState.token ?? undefined);\r\n        \r\n        if (result.ok) {\r\n            history.push(\"/RentalTypes/Index/\");\r\n        } else {\r\n            if (result.statusCode === StatusCodes.UNAUTHORIZED)\r\n                history.push(\"/identity/Login\");\r\n            if (result.statusCode === StatusCodes.FORBIDDEN)\r\n                history.push(\"/AccessDenied\");\r\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <h1>Delete</h1>\r\n        {RentalType.rentalCount === 0 ?\r\n        <h3>Are you sure you want to delete this?</h3> : \r\n        <h3 className=\"text-danger\">You can't delete this Rental Type</h3>\r\n        }\r\n        <h4>Inventory Type</h4>\r\n        <hr />\r\n        <Loader {...pageStatus} />\r\n        <dl className=\"row\">\r\n            <dt className=\"col-sm-4 col-lg-2\">Name</dt>\r\n            <dd className=\"col-sm-8 col-lg-10\">\r\n            {RentalType.name} \r\n            </dd>\r\n            <dt className=\"col-sm-4 col-lg-2\">Rental Count</dt>\r\n            <dd className=\"col-sm-8 col-lg-10\">\r\n            {RentalType.rentalCount}\r\n            </dd>\r\n        </dl>\r\n        <div className=\"form-group\">\r\n        {RentalType.rentalCount === 0 ? \r\n            <span> <button onClick={(e) => deleteClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-danger\">Delete</button> | </span> : null}\r\n            <Link to={'/RentalTypes/Index/'}>Back to List</Link>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default RentalTypeDelete;","import { useEffect, useState, useContext } from \"react\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport { IRouteId } from \"../../types/IRouteId\";\r\nimport Loader from \"../../components/Loader\";\r\nimport { IRentalType } from \"../../dto/IRentalType\";\r\nimport { BaseService } from \"../../services/base-service\";\r\nimport { EPageStatus } from \"../../types/EPageStatus\";\r\nimport { AppContext } from \"../../context/AppContext\";\r\nimport { StatusCodes } from \"http-status-codes\";\r\n\r\nconst RentalTypeDetails = () => {\r\n    // get the router params from hook\r\n    const history = useHistory();\r\n    const {id} = useParams() as IRouteId; \r\n    const appState = useContext(AppContext);\r\n    const rentalType: IRentalType = {\r\n        name: ''\r\n    };\r\n\r\n    const [RentalType, setRentalType] = useState(rentalType as IRentalType);\r\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\r\n\r\n    const loadData = async () => {\r\n        let result = await BaseService.get<IRentalType>(id, 'RentalTypes', {culture : appState.culture}, appState.token ?? undefined);\r\n\r\n        if (result.ok && result.data) {\r\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\r\n            setRentalType(result.data);\r\n        } else {\r\n            if (result.statusCode === StatusCodes.UNAUTHORIZED)\r\n                history.push(\"/identity/Login\");\r\n            if (result.statusCode === StatusCodes.FORBIDDEN)\r\n                history.push(\"/AccessDenied\");\r\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadData();\r\n        // eslint-disable-next-line \r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n        <h1>Details</h1>\r\n        <h4>Rental Type</h4>\r\n        <hr />\r\n        <Loader {...pageStatus} />\r\n        <dl className=\"row\">\r\n            <dt className=\"col-sm-4 col-lg-2\">Name</dt>\r\n            <dd className=\"col-sm-8 col-lg-10\">\r\n            {RentalType.name} \r\n            </dd>\r\n            <dt className=\"col-sm-4 col-lg-2\">Inventory Count</dt>\r\n            <dd className=\"col-sm-8 col-lg-10\">\r\n            {RentalType.rentalCount}\r\n            </dd>\r\n        </dl>\r\n        <div>\r\n            <Link to={'/RentalTypes/Index/'}>Back to List</Link>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default RentalTypeDetails;","import { useParams } from \"react-router-dom\";\r\nimport { IRouteId } from \"../../types/IRouteId\";\r\nimport { useEffect, useState, useContext } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { IRentalType } from \"../../dto/IRentalType\";\r\nimport { BaseService } from \"../../services/base-service\";\r\nimport { AppContext } from \"../../context/AppContext\";\r\nimport Alert, { EAlertClass } from \"../../components/Alert\";\r\nimport { StatusCodes } from \"http-status-codes\";\r\n\r\ninterface IFormValues {\r\n    id?: string;\r\n    name: string;\r\n    nameId?: string;\r\n}\r\n\r\nconst initialFormValues: IFormValues = {\r\n    id: \"\",\r\n    name: \"\",\r\n    nameId: \"\",\r\n};\r\n\r\nexport interface IFormProps {\r\n    values: IFormValues;\r\n    handleChange: (target: HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement) => void;\r\n}\r\n\r\nconst FormView = (props: IFormProps) => {\r\n    const history = useHistory();\r\n    const appState = useContext(AppContext);\r\n    const [alertMessage, setAlertMessage] = useState('');\r\n    const {id} = useParams() as IRouteId; \r\n\r\n    const saveClicked = async (e: Event) => {\r\n        e.preventDefault();\r\n\r\n        if (props.values.name !== \"\") {\r\n            const dto: IRentalType = {\r\n                id: id,\r\n                name: props.values.name,\r\n                nameId: props.values.nameId,\r\n            }\r\n\r\n            let result = await BaseService.update(id, dto, 'RentalTypes', {culture : appState.culture}, appState.token ?? undefined);\r\n\r\n            if (result.ok) {\r\n                history.push(\"/RentalTypes/Index/\");\r\n            } else {\r\n                setAlertMessage(\"Error: \" + result.statusCode);\r\n            }\r\n        } else {\r\n            setAlertMessage('Please fill all required* fields!');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <h1>Edit</h1>\r\n        <h4>Rental Type</h4>\r\n        <hr />\r\n        <div className=\"row\">\r\n            <div className=\"col-md-4\">\r\n            <Alert show={alertMessage !== ''} message={alertMessage} alertClass={EAlertClass.Danger} />\r\n                <div className=\"form-group\">\r\n                    <label className=\"control-label\" htmlFor=\"RentalTypeName\">Name*</label>\r\n                    <input className=\"form-control\" type=\"text\" value={props.values.name} \r\n                        onChange={(e) => props.handleChange(e.target)} id=\"RentalTypeName\" maxLength={64} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <button onClick={(e) => saveClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">Save</button>\r\n                </div>\r\n                <div>\r\n                    <Link to={'/RentalTypes/Index/'}>Back to List</Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nconst RentalTypeEdit = () => {\r\n    const history = useHistory();\r\n    const appState = useContext(AppContext);\r\n    const {id} = useParams() as IRouteId;\r\n    const [formValues, setFormValues] = useState(initialFormValues);\r\n\r\n    const loadData = async () => {\r\n        let result = await BaseService.get<IRentalType>(id, 'RentalTypes', {culture : appState.culture}, appState.token ?? undefined);\r\n\r\n        if (result.ok && result.data) {\r\n            setFormValues(\r\n                { ...formValues, \r\n                    id: result.data.id,\r\n                    name: result.data.name, \r\n                    nameId: result.data.nameId,\r\n                });\r\n\r\n        } else {\r\n            if (result.statusCode === StatusCodes.UNAUTHORIZED)\r\n                history.push(\"/identity/Login\");\r\n            if (result.statusCode === StatusCodes.FORBIDDEN)\r\n                history.push(\"/AccessDenied\");\r\n            // setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadData();\r\n        // eslint-disable-next-line \r\n    }, []);\r\n\r\n    const handleChange = (target: HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement) => {\r\n        if (target.id === 'RentalTypeName') {\r\n            setFormValues({ ...formValues, name: target.value });\r\n            return;\r\n        }\r\n    }\r\n\r\n    return <FormView values={formValues} handleChange={handleChange} />\r\n};\r\n\r\nexport default RentalTypeEdit;","import { useEffect, useState, useContext } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Loader from \"../../components/Loader\";\r\nimport { IRentalType } from \"../../dto/IRentalType\";\r\nimport { BaseService } from \"../../services/base-service\";\r\nimport { EPageStatus } from \"../../types/EPageStatus\";\r\nimport { AppContext } from \"../../context/AppContext\";\r\nimport { StatusCodes } from \"http-status-codes\";\r\n\r\nconst RowDisplay = (props: { RentalType: IRentalType }) => {\r\n    const appState = useContext(AppContext);\r\n    \r\n    return (\r\n        <tr>\r\n            <td>\r\n                {props.RentalType.name}\r\n            </td>\r\n            <td className=\"text-center\">\r\n                {props.RentalType.rentalCount}\r\n            </td>\r\n            <td>\r\n            {appState.role === 'Admin' ?\r\n                <>\r\n                <Link to={'/RentalTypes/Edit/' + props.RentalType.id}>Edit</Link> |&nbsp;\r\n                <Link to={'/RentalTypes/Details/' + props.RentalType.id}>Details</Link> |&nbsp;\r\n                <Link to={'/RentalTypes/Delete/' + props.RentalType.id}>Delete</Link>\r\n                </>\r\n            :\r\n            <>\r\n                <Link to={'/RentalTypes/Details/' + props.RentalType.id}>Details</Link>\r\n            </>\r\n            }\r\n            </td>\r\n        </tr>\r\n    );\r\n}\r\n\r\nconst RentalTypeIndex = () => {\r\n    const history = useHistory();\r\n    const appState = useContext(AppContext);\r\n\r\n    const [RentalTypes, setRentalTypes] = useState([] as IRentalType[]);\r\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\r\n\r\n    const loadData = async () => {\r\n        let result = await BaseService.getAll<IRentalType>('RentalTypes', {culture : appState.culture}, appState.token ?? undefined);\r\n\r\n        if (result.ok && result.data) {\r\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\r\n            setRentalTypes(result.data);\r\n        } else {\r\n            if (result.statusCode === StatusCodes.UNAUTHORIZED)\r\n                history.push(\"/identity/Login\");\r\n            if (result.statusCode === StatusCodes.FORBIDDEN)\r\n                history.push(\"/AccessDenied\");\r\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\r\n        }\r\n    }\r\n    \r\n    useEffect(() => {\r\n        loadData();\r\n        // eslint-disable-next-line \r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <h1>Rental Types</h1>\r\n            {appState.role === 'Admin' ?\r\n            <p><Link to={'/RentalTypes/Create/'}>Create New</Link></p> : null }\r\n            <Loader {...pageStatus} />\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>\r\n                            Name\r\n                        </th>\r\n                        <th className=\"text-center\">\r\n                            Rental Count\r\n                        </th>\r\n                        <th></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {RentalTypes.map(RentalType =>\r\n                        <RowDisplay RentalType={RentalType} key={RentalType.id} />)\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default RentalTypeIndex;","import { useState, useContext, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { IRental } from \"../../dto/IRental\";\r\nimport { BaseService } from \"../../services/base-service\";\r\nimport { AppContext } from \"../../context/AppContext\";\r\nimport Alert, { EAlertClass } from \"../../components/Alert\";\r\nimport { IRentalType } from \"../../dto/IRentalType\";\r\nimport { IInventory } from \"../../dto/IInventory\";\r\nimport { IEmployee } from \"../../dto/IEmployee\";\r\n\r\ninterface IFormValues {\r\n    inventories: IInventory[];\r\n    inventoryId: string;\r\n    borrowers: IEmployee[];\r\n    borrowerId: string;\r\n    lenders: IEmployee[];\r\n    lenderId: string;\r\n    rentalTypes: IRentalType[];\r\n    rentalTypeId: string;\r\n    startDate: string;\r\n    endDate: string;\r\n    returnedDate?: string;\r\n    comment?: string;\r\n    commentId?: string;\r\n}\r\n\r\nconst initialFormValues: IFormValues = {\r\n    inventories: [],\r\n    inventoryId: '',\r\n    rentalTypes: [],\r\n    rentalTypeId: '',\r\n    borrowers: [],\r\n    borrowerId: '',\r\n    lenders: [],\r\n    lenderId: '',\r\n    startDate: '',\r\n    endDate: '',\r\n    returnedDate: undefined,\r\n    comment: undefined,\r\n    commentId: undefined\r\n};\r\n\r\nexport interface IFormProps {\r\n    values: IFormValues;\r\n    handleChange: (target: HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement) => void;\r\n}\r\n\r\nconst FormView = (props: IFormProps) => {\r\n    const history = useHistory();\r\n    const appState = useContext(AppContext);\r\n    const [alertMessage, setAlertMessage] = useState('');\r\n\r\n    const createClicked = async (e: Event) => {\r\n        e.preventDefault();\r\n\r\n        if (props.values.inventoryId !== \"\" && props.values.rentalTypeId !== \"\" \r\n            && props.values.borrowerId !== \"\" && props.values.startDate !== \"\"\r\n            && props.values.lenderId !== \"\" && props.values.endDate !== \"\") {\r\n            const dto: IRental = {\r\n                inventoryId: props.values.inventoryId,\r\n                rentalTypeId: props.values.rentalTypeId,\r\n                lenderId: props.values.lenderId,\r\n                borrowerId: props.values.borrowerId,\r\n                startDate: props.values.startDate,\r\n                endDate: props.values.endDate,\r\n                returnedDate: props.values.returnedDate === \"\" ? undefined : props.values.returnedDate,\r\n                comment: props.values.comment,\r\n                commentId: props.values.commentId\r\n            }\r\n    \r\n            let result = await BaseService.create(dto, 'Rentals', {culture : appState.culture}, appState.token ?? undefined);\r\n\r\n            if (result.ok) {\r\n                history.push(\"/Rentals/Index/\");\r\n            } else {\r\n                setAlertMessage(\"Error: \" + result.statusCode);\r\n            }\r\n        } else {\r\n            setAlertMessage('Please fill all required* fields!');\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <>\r\n        <h1>Create</h1>\r\n        <h4>Rental</h4>\r\n        <hr />\r\n        <div className=\"row\">\r\n            <div className=\"col-md-4\">\r\n            <Alert show={alertMessage !== ''} message={alertMessage} alertClass={EAlertClass.Danger} />\r\n                <div className=\"form-group\">\r\n                    <label className=\"control-label\" htmlFor=\"BorrowerId\">Borrower*</label>\r\n                    <select className=\"form-control\" value={props.values.borrowerId} \r\n                        onChange={(e) => props.handleChange(e.target)} id=\"BorrowerId\">\r\n                            <option value=\"\">-- Select Borrower --</option>\r\n                            {props.values.borrowers.map((e, key) => {\r\n                            return <option key={key} value={e.id}>{e.name}</option>;\r\n                            })}                    \r\n                    </select>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"control-label\" htmlFor=\"LenderId\">Lender*</label>\r\n                    <select className=\"form-control\" value={props.values.lenderId} \r\n                        onChange={(e) => props.handleChange(e.target)} id=\"LenderId\">\r\n                            <option value=\"\">-- Select Lender --</option>\r\n                            {props.values.lenders.map((e, key) => {\r\n                            return <option key={key} value={e.id}>{e.name}</option>;\r\n                            })}                    \r\n                    </select>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"control-label\" htmlFor=\"InventoryId\">Inventory*</label>\r\n                    <select className=\"form-control\" value={props.values.inventoryId} \r\n                        onChange={(e) => props.handleChange(e.target)} id=\"InventoryId\">\r\n                            <option value=\"\">-- Select Inventory --</option>\r\n                            {props.values.inventories.map((e, key) => {\r\n                            return <option key={key} value={e.id}>{e.name}</option>;\r\n                            })}                    \r\n                    </select>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"control-label\" htmlFor=\"RentalTypeId\">Rental Type*</label>\r\n                    <select className=\"form-control\" value={props.values.rentalTypeId} \r\n                        onChange={(e) => props.handleChange(e.target)} id=\"RentalTypeId\">\r\n                            <option value=\"\">-- Select Rental Type --</option>\r\n                            {props.values.rentalTypes.map((e, key) => {\r\n                            return <option key={key} value={e.id}>{e.name}</option>;\r\n                            })}                    \r\n                    </select>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"control-label\" htmlFor=\"StartDate\">Start Date*</label>\r\n                    <input className=\"form-control\" type=\"date\" value={props.values.startDate} \r\n                        onChange={(e) => props.handleChange(e.target)} id=\"StartDate\" />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"control-label\" htmlFor=\"EndDate\">End Date*</label>\r\n                    <input className=\"form-control\" type=\"date\" value={props.values.endDate} \r\n                        onChange={(e) => props.handleChange(e.target)} id=\"EndDate\" />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"control-label\" htmlFor=\"ReturnedDate\">Returned</label>\r\n                    <input className=\"form-control\" type=\"date\" value={props.values.returnedDate} \r\n                        onChange={(e) => props.handleChange(e.target)} id=\"ReturnedDate\" />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"control-label\" htmlFor=\"Comment\">Comment</label>\r\n                    <input className=\"form-control\" type=\"text\" value={props.values.comment} \r\n                        onChange={(e) => props.handleChange(e.target)} id=\"Comment\" maxLength={256} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <button onClick={(e) => createClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">Create</button>\r\n                </div>\r\n                <div>\r\n                    <Link to={'/Rentals/Index/'}>Back to List</Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nconst RentalCreate = () => {\r\n\r\n    const appState = useContext(AppContext);\r\n\r\n    const [formValues, setFormValues] = useState(initialFormValues);\r\n    const dataInventory: IInventory[] = [];\r\n    const dataBorrower: IEmployee[] = [];\r\n    const dataLender: IEmployee[] = [];\r\n\r\n    const loadData = async () => {\r\n        let inventoryResult = await BaseService.getAll<IInventory>('Inventories', {culture : appState.culture, includeEnded: \"false\" }, appState.token ?? undefined);\r\n        if (inventoryResult.data) {\r\n            for (const key in inventoryResult.data) {\r\n                if (inventoryResult.data[key].isRentedOut === false) {\r\n                    dataInventory.push(inventoryResult.data[key]);\r\n                }\r\n            }\r\n        }\r\n\r\n        let rentalTypeResult = await BaseService.getAll<IRentalType>('RentalTypes', {culture : appState.culture}, appState.token ?? undefined);\r\n\r\n        let employeeTypeResult = await BaseService.getAll<IEmployee>('Employees', {culture : appState.culture, includeEnded: \"false\"}, appState.token ?? undefined);\r\n        \r\n        if (employeeTypeResult.ok && employeeTypeResult.data) {\r\n            for (const key in employeeTypeResult.data) {\r\n                if (employeeTypeResult.data[key].role === 'Admin') {\r\n                    dataLender.push(employeeTypeResult.data[key]);\r\n                } else {\r\n                    dataBorrower.push(employeeTypeResult.data[key]);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (inventoryResult.ok && inventoryResult.data && rentalTypeResult.data) {\r\n            setFormValues(\r\n                { ...formValues, \r\n                    rentalTypes: rentalTypeResult.data,\r\n                    inventories: dataInventory,\r\n                    borrowers: dataBorrower,\r\n                    lenders: dataLender,\r\n                });\r\n\r\n        } \r\n    }\r\n\r\n    useEffect(() => {\r\n        loadData();\r\n        // eslint-disable-next-line \r\n    }, []);\r\n    \r\n\r\n    const handleChange = (target: HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement) => {\r\n        if (target.id === 'RentalTypeId') {\r\n            setFormValues({ ...formValues, rentalTypeId: target.value });\r\n            return;\r\n        }\r\n        if (target.id === 'InventoryId') {\r\n            setFormValues({ ...formValues, inventoryId: target.value });\r\n            return;\r\n        }\r\n        if (target.id === 'BorrowerId') {\r\n            setFormValues({ ...formValues, borrowerId: target.value });\r\n            return;\r\n        }\r\n        if (target.id === 'LenderId') {\r\n            setFormValues({ ...formValues, lenderId: target.value });\r\n            return;\r\n        }\r\n        if (target.id === 'StartDate') {\r\n            setFormValues({ ...formValues, startDate: target.value });\r\n            return;\r\n        }\r\n        if (target.id === 'EndDate') {\r\n            setFormValues({ ...formValues, endDate: target.value });\r\n            return;\r\n        }\r\n        if (target.id === 'ReturnedDate') {\r\n            setFormValues({ ...formValues, returnedDate: target.value });\r\n            return;\r\n        }\r\n        if (target.id === 'Comment') {\r\n            setFormValues({ ...formValues, comment: target.value });\r\n            return;\r\n        }\r\n    }\r\n\r\n    return <FormView values={formValues} handleChange={handleChange} />\r\n};\r\n\r\nexport default RentalCreate;","import { useEffect, useState, useContext } from \"react\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport { IRouteId } from \"../../types/IRouteId\";\r\nimport Loader from \"../../components/Loader\";\r\nimport { IRental } from \"../../dto/IRental\";\r\nimport { BaseService } from \"../../services/base-service\";\r\nimport { EPageStatus } from \"../../types/EPageStatus\";\r\nimport { AppContext } from \"../../context/AppContext\";\r\nimport moment from 'moment';\r\nimport { IEmployee } from \"../../dto/IEmployee\";\r\nimport { StatusCodes } from \"http-status-codes\";\r\n\r\nconst RentalDelete = () => {\r\n    // get the router params from hook\r\n    const history = useHistory();\r\n\r\n    const {id} = useParams() as IRouteId; \r\n    const appState = useContext(AppContext);\r\n    const rental: IRental = {\r\n        inventory: undefined,\r\n        inventoryId: '',\r\n        rentalType: undefined,\r\n        rentalTypeId: '',\r\n        lenderId: '',\r\n        lender: undefined,\r\n        borrowerId: '',\r\n        borrower: undefined,\r\n        startDate: '',\r\n        endDate: '',\r\n        returnedDate: undefined,\r\n        comment: undefined,\r\n        commentId: ''\r\n    };\r\n\r\n    const [Rental, setRental] = useState(rental as IRental);\r\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\r\n\r\n    const loadData = async () => {\r\n        let result = await BaseService.get<IRental>(id, 'Rentals', {culture : appState.culture}, appState.token ?? undefined);\r\n\r\n        if (result.ok && result.data) {\r\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\r\n            result.data.borrower = (await BaseService.get(result.data.borrowerId, 'Employees', {culture : appState.culture}, appState.token ?? undefined)).data as IEmployee;\r\n            result.data.lender = (await BaseService.get(result.data.lenderId, 'Employees', {culture : appState.culture}, appState.token ?? undefined)).data as IEmployee;\r\n            setRental(result.data);\r\n        } else {\r\n            if (result.statusCode === StatusCodes.UNAUTHORIZED)\r\n                history.push(\"/identity/Login\");\r\n            if (result.statusCode === StatusCodes.FORBIDDEN)\r\n                history.push(\"/AccessDenied\");\r\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadData();\r\n        // eslint-disable-next-line \r\n    }, []);\r\n\r\n    const deleteClicked = async (e: Event) => {\r\n        e.preventDefault();\r\n        let result = await BaseService.delete(id, 'Rentals', appState.token ?? undefined);\r\n        \r\n        if (result.ok) {\r\n            history.push(\"/Rentals/Index/\");\r\n        } else {\r\n            if (result.statusCode === StatusCodes.UNAUTHORIZED)\r\n                history.push(\"/identity/Login\");\r\n            if (result.statusCode === StatusCodes.FORBIDDEN)\r\n                history.push(\"/AccessDenied\");\r\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <h1>Delete</h1>\r\n        <h3>Are you sure you want to delete this?</h3>\r\n        <h4>Rental</h4>\r\n        <hr />\r\n        <Loader {...pageStatus} />\r\n        <dl className=\"row\">\r\n            <dt className=\"col-sm-4 col-lg-2\">Inventory</dt>\r\n            <dd className=\"col-sm-8 col-lg-10\">\r\n                {Rental.inventory?.name} \r\n            </dd>\r\n            {appState.role === 'Admin' ?\r\n            <>\r\n            <dt className=\"col-sm-4 col-lg-2\">Borrower</dt>\r\n            <dd className=\"col-sm-8 col-lg-10\">\r\n                {Rental.borrower?.name} \r\n            </dd>\r\n            </> : null }\r\n            <dt className=\"col-sm-4 col-lg-2\">Lender</dt>\r\n            <dd className=\"col-sm-8 col-lg-10\">\r\n                {Rental.lender?.name} \r\n            </dd>\r\n            {appState.role === 'Admin' ?\r\n            <>\r\n            <dt className=\"col-sm-4 col-lg-2\">Rental Type</dt>\r\n            <dd className=\"col-sm-8 col-lg-10\">\r\n                {Rental.rentalType?.name}    \r\n            </dd>\r\n            </> : null }\r\n            <dt className=\"col-sm-4 col-lg-2\">Start Date</dt>\r\n            <dd className=\"col-sm-8 col-lg-10\">\r\n                {moment(Rental.startDate).format('DD.MM.YYYY')}    \r\n            </dd>\r\n            <dt className=\"col-sm-4 col-lg-2\">End Date</dt>\r\n            <dd className=\"col-sm-8 col-lg-10\">\r\n                {moment(Rental.endDate).format('DD.MM.YYYY')}    \r\n            </dd>\r\n            <dt className=\"col-sm-4 col-lg-2\">Returned</dt>\r\n            <dd className=\"col-sm-8 col-lg-10\">\r\n                {Rental.returnedDate ? moment(Rental.returnedDate).format('DD.MM.YYYY') : ''}    \r\n            </dd>\r\n            <dt className=\"col-sm-4 col-lg-2\">Comment</dt>\r\n            <dd className=\"col-sm-8 col-lg-10\">\r\n                {Rental.comment}\r\n            </dd>\r\n        </dl>\r\n        <div className=\"form-group\">\r\n            <button onClick={(e) => deleteClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-danger\">Delete</button> |&nbsp;\r\n            <Link to={'/Rentals/Index/'}>Back to List</Link>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default RentalDelete;","import { useEffect, useState, useContext } from \"react\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport { IRouteId } from \"../../types/IRouteId\";\r\nimport Loader from \"../../components/Loader\";\r\nimport { IRental } from \"../../dto/IRental\";\r\nimport { BaseService } from \"../../services/base-service\";\r\nimport { EPageStatus } from \"../../types/EPageStatus\";\r\nimport { AppContext } from \"../../context/AppContext\";\r\nimport moment from 'moment';\r\nimport { IEmployee } from \"../../dto/IEmployee\";\r\nimport { StatusCodes } from \"http-status-codes\";\r\n\r\nconst RentalDetails = () => {\r\n    // get the router params from hook\r\n    const history = useHistory();\r\n    const {id} = useParams() as IRouteId; \r\n    const appState = useContext(AppContext);\r\n    const rental: IRental = {\r\n        inventory: undefined,\r\n        inventoryId: '',\r\n        rentalType: undefined,\r\n        rentalTypeId: '',\r\n        lenderId: '',\r\n        lender: undefined,\r\n        borrowerId: '',\r\n        borrower: undefined,\r\n        startDate: '',\r\n        endDate: '',\r\n        returnedDate: undefined,\r\n        comment: undefined,\r\n        commentId: ''\r\n    };\r\n\r\n    const [Rental, setRental] = useState(rental as IRental);\r\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\r\n\r\n    const loadData = async () => {\r\n        \r\n        let result = await BaseService.get<IRental>(id, 'Rentals', {culture : appState.culture}, appState.token ?? undefined);\r\n\r\n        if (result.ok && result.data) {\r\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\r\n            result.data.borrower = (await BaseService.get(result.data.borrowerId, 'Employees', {culture : appState.culture}, appState.token ?? undefined)).data as IEmployee;\r\n            result.data.lender = (await BaseService.get(result.data.lenderId, 'Employees', {culture : appState.culture}, appState.token ?? undefined)).data as IEmployee;\r\n\r\n            setRental(result.data);\r\n        } else {\r\n            if (result.statusCode === StatusCodes.UNAUTHORIZED)\r\n                history.push(\"/identity/Login\");\r\n            if (result.statusCode === StatusCodes.FORBIDDEN)\r\n                history.push(\"/AccessDenied\");\r\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadData();\r\n        // eslint-disable-next-line \r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n        <h1>Details</h1>\r\n        <h4>Rental</h4>\r\n        <hr />\r\n        <Loader {...pageStatus} />\r\n        <dl className=\"row\">\r\n            <dt className=\"col-sm-4 col-lg-2\">Inventory</dt>\r\n            <dd className=\"col-sm-8 col-lg-10\">\r\n                {Rental.inventory?.name} \r\n            </dd>\r\n            {appState.role === 'Admin' ?\r\n            <>\r\n            <dt className=\"col-sm-4 col-lg-2\">Borrower</dt>\r\n            <dd className=\"col-sm-8 col-lg-10\">\r\n                {Rental.borrower?.name} \r\n            </dd>\r\n            </> : null }\r\n            <dt className=\"col-sm-4 col-lg-2\">Lender</dt>\r\n            <dd className=\"col-sm-8 col-lg-10\">\r\n                {Rental.lender?.name} \r\n            </dd>\r\n            {appState.role === 'Admin' ?\r\n            <>\r\n            <dt className=\"col-sm-4 col-lg-2\">Rental Type</dt>\r\n            <dd className=\"col-sm-8 col-lg-10\">\r\n                {Rental.rentalType?.name}    \r\n            </dd>\r\n            </> : null }\r\n            <dt className=\"col-sm-4 col-lg-2\">Start Date</dt>\r\n            <dd className=\"col-sm-8 col-lg-10\">\r\n                {moment(Rental.startDate).format('DD.MM.YYYY')}    \r\n            </dd>\r\n            <dt className=\"col-sm-4 col-lg-2\">End Date</dt>\r\n            <dd className=\"col-sm-8 col-lg-10\">\r\n                {moment(Rental.endDate).format('DD.MM.YYYY')}    \r\n            </dd>\r\n            <dt className=\"col-sm-4 col-lg-2\">Returned</dt>\r\n            <dd className=\"col-sm-8 col-lg-10\">\r\n                {Rental.returnedDate ? moment(Rental.returnedDate).format('DD.MM.YYYY') : ''}    \r\n            </dd>\r\n            <dt className=\"col-sm-4 col-lg-2\">Comment</dt>\r\n            <dd className=\"col-sm-8 col-lg-10\">\r\n                {Rental.comment}\r\n            </dd>\r\n        </dl>\r\n        <div>\r\n            <Link to={'/Rentals/Index/'}>Back to List</Link>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default RentalDetails;","import { useParams } from \"react-router-dom\";\r\nimport { IRouteId } from \"../../types/IRouteId\";\r\nimport { useEffect, useState, useContext } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { IRental } from \"../../dto/IRental\";\r\nimport { BaseService } from \"../../services/base-service\";\r\nimport { AppContext } from \"../../context/AppContext\";\r\nimport Alert, { EAlertClass } from \"../../components/Alert\";\r\nimport moment from 'moment';\r\nimport { IRentalType } from \"../../dto/IRentalType\";\r\nimport { IInventory } from \"../../dto/IInventory\";\r\nimport { IEmployee } from \"../../dto/IEmployee\";\r\nimport { StatusCodes } from \"http-status-codes\";\r\n\r\ninterface IFormValues {\r\n    id?: string;\r\n    inventories: IInventory[];\r\n    inventoryId: string;\r\n    borrowers: IEmployee[];\r\n    borrowerId: string;\r\n    lenders: IEmployee[];\r\n    lenderId: string;\r\n    rentalTypes: IRentalType[];\r\n    rentalTypeId: string;\r\n    startDate: string;\r\n    endDate: string;\r\n    returnedDate?: string;\r\n    comment?: string;\r\n    commentId?: string;\r\n}\r\n\r\nconst initialFormValues: IFormValues = {\r\n    id: \"\",\r\n    inventories: [],\r\n    inventoryId: '',\r\n    rentalTypes: [],\r\n    rentalTypeId: '',\r\n    borrowers: [],\r\n    borrowerId: '',\r\n    lenders: [],\r\n    lenderId: '',\r\n    startDate: '',\r\n    endDate: '',\r\n    returnedDate: undefined,\r\n    comment: undefined,\r\n    commentId: undefined\r\n};\r\n\r\nexport interface IFormProps {\r\n    values: IFormValues;\r\n    handleChange: (target: HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement) => void;\r\n}\r\n\r\nconst FormView = (props: IFormProps) => {\r\n    const history = useHistory();\r\n    const appState = useContext(AppContext);\r\n    const [alertMessage, setAlertMessage] = useState('');\r\n    const {id} = useParams() as IRouteId; \r\n\r\n    const saveClicked = async (e: Event) => {\r\n        e.preventDefault();\r\n\r\n        if (props.values.inventoryId !== \"\" && props.values.rentalTypeId !== \"\" \r\n            && props.values.borrowerId !== \"\" && props.values.startDate !== \"\"\r\n            && props.values.lenderId !== \"\" && props.values.endDate !== \"\") {\r\n        const dto: IRental = {\r\n                id: id,\r\n                inventoryId: props.values.inventoryId,\r\n                rentalTypeId: props.values.rentalTypeId,\r\n                lenderId: props.values.lenderId,\r\n                borrowerId: props.values.borrowerId,\r\n                startDate: props.values.startDate,\r\n                endDate: props.values.endDate,\r\n                returnedDate: props.values.returnedDate === \"\" ? undefined : props.values.returnedDate,\r\n                comment: props.values.comment,\r\n                commentId: props.values.commentId\r\n            }\r\n\r\n            let result = await BaseService.update(id, dto, 'Rentals', {culture : appState.culture}, appState.token ?? undefined);\r\n\r\n            if (result.ok) {\r\n                history.push(\"/Rentals/Index/\");\r\n            } else {\r\n                setAlertMessage(\"Error: \" + result.statusCode);\r\n            }\r\n        } else {\r\n            setAlertMessage('Please fill all required* fields!');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <h1>Edit</h1>\r\n        <h4>Rental</h4>\r\n        <hr />\r\n        <div className=\"row\">\r\n            <div className=\"col-md-4\">\r\n            <Alert show={alertMessage !== ''} message={alertMessage} alertClass={EAlertClass.Danger} />\r\n                <div className=\"form-group\">\r\n                    <label className=\"control-label\" htmlFor=\"BorrowerId\">Borrower*</label>\r\n                    <select className=\"form-control\" value={props.values.borrowerId} \r\n                        onChange={(e) => props.handleChange(e.target)} id=\"BorrowerId\">\r\n                            <option value=\"\">-- Select Borrower --</option>\r\n                            {props.values.borrowers.map((e, key) => {\r\n                            return <option key={key} value={e.id}>{e.name}</option>;\r\n                            })}                    \r\n                    </select>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"control-label\" htmlFor=\"LenderId\">Lender*</label>\r\n                    <select className=\"form-control\" value={props.values.lenderId} \r\n                        onChange={(e) => props.handleChange(e.target)} id=\"LenderId\">\r\n                            <option value=\"\">-- Select Lender --</option>\r\n                            {props.values.lenders.map((e, key) => {\r\n                            return <option key={key} value={e.id}>{e.name}</option>;\r\n                            })}                    \r\n                    </select>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"control-label\" htmlFor=\"InventoryId\">Inventory*</label>\r\n                    <select className=\"form-control\" value={props.values.inventoryId} \r\n                        onChange={(e) => props.handleChange(e.target)} id=\"InventoryId\">\r\n                            <option value=\"\">-- Select Inventory --</option>\r\n                            {props.values.inventories.map((e, key) => {\r\n                            return <option key={key} value={e.id}>{e.name}</option>;\r\n                            })}                    \r\n                    </select>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"control-label\" htmlFor=\"RentalTypeId\">Rental Type*</label>\r\n                    <select className=\"form-control\" value={props.values.rentalTypeId} \r\n                        onChange={(e) => props.handleChange(e.target)} id=\"RentalTypeId\">\r\n                            <option value=\"\">-- Select Rental Type --</option>\r\n                            {props.values.rentalTypes.map((e, key) => {\r\n                            return <option key={key} value={e.id}>{e.name}</option>;\r\n                            })}                    \r\n                    </select>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"control-label\" htmlFor=\"StartDate\">Start Date*</label>\r\n                    <input className=\"form-control\" type=\"date\" value={props.values.startDate} \r\n                        onChange={(e) => props.handleChange(e.target)} id=\"StartDate\" />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"control-label\" htmlFor=\"EndDate\">End Date*</label>\r\n                    <input className=\"form-control\" type=\"date\" value={props.values.endDate} \r\n                        onChange={(e) => props.handleChange(e.target)} id=\"EndDate\" />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"control-label\" htmlFor=\"ReturnedDate\">Returned</label>\r\n                    <input className=\"form-control\" type=\"date\" value={props.values.returnedDate} \r\n                        onChange={(e) => props.handleChange(e.target)} id=\"ReturnedDate\" />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"control-label\" htmlFor=\"Comment\">Comment</label>\r\n                    <input className=\"form-control\" type=\"text\" value={props.values.comment} \r\n                        onChange={(e) => props.handleChange(e.target)} id=\"Comment\" maxLength={256} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <button onClick={(e) => saveClicked(e.nativeEvent)} type=\"submit\" className=\"btn btn-primary\">Save</button>\r\n                </div>\r\n                <div>\r\n                    <Link to={'/Rentals/Index/'}>Back to List</Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nconst RentalEdit = () => {\r\n    const history = useHistory();\r\n    const appState = useContext(AppContext);\r\n    const {id} = useParams() as IRouteId;\r\n    const [formValues, setFormValues] = useState(initialFormValues);\r\n    const dataInventory: IInventory[] = [];\r\n    const dataBorrower: IEmployee[] = [];\r\n    const dataLender: IEmployee[] = [];\r\n\r\n    const loadData = async () => {\r\n\r\n        let rentalResult = await BaseService.get<IRental>(id, 'Rentals', {culture : appState.culture}, appState.token ?? undefined);\r\n\r\n        let inventoryResult = await BaseService.getAll<IInventory>('Inventories', {culture : appState.culture, includeEnded: \"false\" }, appState.token ?? undefined);\r\n        if (inventoryResult.data) {\r\n            for (const key in inventoryResult.data) {\r\n                if (inventoryResult.data[key].isRentedOut === false ||\r\n                    inventoryResult.data[key].id === rentalResult.data?.inventoryId) {\r\n                    dataInventory.push(inventoryResult.data[key]);\r\n                }\r\n            }\r\n        }\r\n\r\n        let rentalTypeResult = await BaseService.getAll<IRentalType>('RentalTypes', {culture : appState.culture}, appState.token ?? undefined);\r\n\r\n        let employeeResult = await BaseService.getAll<IEmployee>('Employees', {culture : appState.culture, includeEnded: \"false\"}, appState.token ?? undefined);\r\n        \r\n        if (employeeResult.ok && employeeResult.data) {\r\n            for (const key in employeeResult.data) {\r\n                if (employeeResult.data[key].role === 'Admin') {\r\n                    dataLender.push(employeeResult.data[key]);\r\n                } else {\r\n                    dataBorrower.push(employeeResult.data[key]);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (inventoryResult.ok && inventoryResult.data && rentalTypeResult.data) {\r\n            setFormValues(\r\n                { ...formValues, \r\n                    rentalTypes: rentalTypeResult.data,\r\n                    inventories: dataInventory,\r\n                    borrowers: dataBorrower,\r\n                    lenders: dataLender,\r\n                });\r\n\r\n        } \r\n\r\n        if (rentalResult.ok && rentalResult.data  && inventoryResult.data && rentalTypeResult.data && employeeResult.data) {\r\n            setFormValues(\r\n                { ...formValues, \r\n                    id: rentalResult.data.id,\r\n                    inventoryId: rentalResult.data.inventoryId,\r\n                    inventories: dataInventory,\r\n                    rentalTypes: rentalTypeResult.data ?? [],\r\n                    rentalTypeId: rentalResult.data.rentalTypeId,\r\n                    borrowers: dataBorrower,\r\n                    borrowerId: rentalResult.data.borrowerId,\r\n                    lenders: dataLender,\r\n                    lenderId: rentalResult.data.lenderId,\r\n                    startDate: moment(rentalResult.data.startDate).format('YYYY-MM-DD'),\r\n                    endDate: moment(rentalResult.data.endDate).format('YYYY-MM-DD'),\r\n                    returnedDate: rentalResult.data.returnedDate !== null ? moment(rentalResult.data.returnedDate).format('YYYY-MM-DD') : undefined,\r\n                    comment: rentalResult.data.comment,\r\n                    commentId: rentalResult.data.commentId\r\n                });\r\n\r\n        } else {\r\n            if (rentalResult.statusCode === StatusCodes.UNAUTHORIZED)\r\n                history.push(\"/identity/Login\");\r\n            if (rentalResult.statusCode === StatusCodes.FORBIDDEN)\r\n                history.push(\"/AccessDenied\");\r\n            // setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadData();\r\n        // eslint-disable-next-line \r\n    }, []);\r\n\r\n    const handleChange = (target: HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement) => {\r\n        if (target.id === 'RentalTypeId') {\r\n            setFormValues({ ...formValues, rentalTypeId: target.value });\r\n            return;\r\n        }\r\n        if (target.id === 'InventoryId') {\r\n            setFormValues({ ...formValues, inventoryId: target.value });\r\n            return;\r\n        }\r\n        if (target.id === 'BorrowerId') {\r\n            setFormValues({ ...formValues, borrowerId: target.value });\r\n            return;\r\n        }\r\n        if (target.id === 'LenderId') {\r\n            setFormValues({ ...formValues, lenderId: target.value });\r\n            return;\r\n        }\r\n        if (target.id === 'StartDate') {\r\n            setFormValues({ ...formValues, startDate: target.value });\r\n            return;\r\n        }\r\n        if (target.id === 'EndDate') {\r\n            setFormValues({ ...formValues, endDate: target.value });\r\n            return;\r\n        }\r\n        if (target.id === 'ReturnedDate') {\r\n            setFormValues({ ...formValues, returnedDate: target.value });\r\n            return;\r\n        }\r\n        if (target.id === 'Comment') {\r\n            setFormValues({ ...formValues, comment: target.value });\r\n            return;\r\n        }\r\n    }\r\n\r\n    return <FormView values={formValues} handleChange={handleChange} />\r\n};\r\n\r\nexport default RentalEdit;","import { useEffect, useState, useContext } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Loader from \"../../components/Loader\";\r\nimport { IRental } from \"../../dto/IRental\";\r\nimport { BaseService } from \"../../services/base-service\";\r\nimport { EPageStatus } from \"../../types/EPageStatus\";\r\nimport { AppContext } from \"../../context/AppContext\";\r\nimport moment from 'moment';\r\nimport { IEmployee } from \"../../dto/IEmployee\";\r\nimport { StatusCodes } from \"http-status-codes\";\r\n\r\nconst RowDisplay = (props: { Rental: IRental }) => {\r\n    const appState = useContext(AppContext);\r\n    \r\n    return (\r\n        <tr>\r\n            <td>\r\n                {props.Rental.inventory?.name}\r\n            </td>\r\n            {appState.role === 'Admin' ?\r\n            <td>\r\n                {props.Rental.borrower?.name}\r\n            </td>  : null }\r\n            <td>\r\n                {props.Rental.lender?.name}\r\n            </td>\r\n            {appState.role === 'Admin' ?\r\n            <td>\r\n                {props.Rental.rentalType?.name}\r\n            </td> : null }\r\n            <td>\r\n                {moment(props.Rental.startDate).format('DD.MM.YYYY')}\r\n            </td>\r\n            <td>\r\n                {moment(props.Rental.endDate).format('DD.MM.YYYY')}\r\n            </td>\r\n            <td>\r\n                {props.Rental.returnedDate ? moment(props.Rental.returnedDate).format('DD.MM.YYYY') : ''}\r\n            </td>\r\n            <td>\r\n            {appState.role === 'Admin' ?\r\n                <>\r\n                <Link to={'/Rentals/Edit/' + props.Rental.id}>Edit</Link> |&nbsp;\r\n                <Link to={'/Rentals/Details/' + props.Rental.id}>Details</Link> |&nbsp;\r\n                <Link to={'/Rentals/Delete/' + props.Rental.id}>Delete</Link>\r\n                </>\r\n            :\r\n            <>\r\n                <Link to={'/Rentals/Details/' + props.Rental.id}>Details</Link>\r\n            </>\r\n            }\r\n            </td>\r\n        </tr>\r\n    );\r\n}\r\n\r\nconst RentalIndex = () => {\r\n    const history = useHistory();\r\n    const appState = useContext(AppContext);\r\n\r\n    const [Rentals, setRentals] = useState([] as IRental[]);\r\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\r\n\r\n    const loadData = async () => {\r\n        let result = await BaseService.getAll<IRental>('Rentals', {culture : appState.culture}, appState.token ?? undefined);\r\n\r\n        if (result.ok && result.data) {\r\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\r\n            \r\n            const temp = result.data;\r\n            for (const key in temp) {\r\n                temp[key].borrower = (await BaseService.get(temp[key].borrowerId, 'Employees', {culture : appState.culture}, appState.token ?? undefined)).data as IEmployee;\r\n                temp[key].lender = (await BaseService.get(temp[key].lenderId, 'Employees', {culture : appState.culture}, appState.token ?? undefined)).data as IEmployee;\r\n            }\r\n            setRentals(result.data);\r\n\r\n        } else {\r\n            if (result.statusCode === StatusCodes.UNAUTHORIZED)\r\n                history.push(\"/identity/Login\");\r\n            if (result.statusCode === StatusCodes.FORBIDDEN)\r\n                history.push(\"/AccessDenied\");\r\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: result.statusCode });\r\n        }\r\n    }\r\n    \r\n    useEffect(() => {\r\n        loadData();\r\n        // eslint-disable-next-line \r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <h1>Rentals</h1>\r\n            {appState.role === 'Admin' ?\r\n            <p><Link to={'/Rentals/Create/'}>Create New</Link></p> : null }\r\n            <Loader {...pageStatus} />\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>\r\n                            Inventory\r\n                        </th>\r\n                        {appState.role === 'Admin' ?\r\n                        <th>\r\n                            Borrower\r\n                        </th> : null }\r\n                        <th>\r\n                            Lender\r\n                        </th>\r\n                        {appState.role === 'Admin' ?\r\n                        <th>\r\n                            Rental Type\r\n                        </th> : null }\r\n                        <th>\r\n                            Start Date\r\n                        </th>\r\n                        <th>\r\n                            End Date\r\n                        </th>\r\n                        <th>\r\n                            Returned\r\n                        </th>\r\n                        <th></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {Rentals.map(Rental =>\r\n                        <RowDisplay Rental={Rental} key={Rental.id} />)\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default RentalIndex;","import { useState } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { AppContextProvider, initialAppState } from './context/AppContext';\r\nimport Footer from './components/Footer';\r\nimport Header from './components/Header';\r\nimport HomeIndex from './containers/home/HomeIndex';\r\nimport Login from './containers/identity/Login';\r\nimport Register from './containers/identity/Register';\r\nimport Page404 from './containers/Page404';\r\nimport Page403 from './containers/Page403';\r\nimport PageForm from './containers/PageForm';\r\n\r\nimport InventoryTypeCreate from './containers/inventory-types/InventoryTypeCreate';\r\nimport InventoryTypeDelete from './containers/inventory-types/InventoryTypeDelete';\r\nimport InventoryTypeDetails from './containers/inventory-types/InventoryTypeDetails';\r\nimport InventoryTypeEdit from './containers/inventory-types/InventoryTypeEdit';\r\nimport InventoryTypeIndex from './containers/inventory-types/InventoryTypeIndex';\r\n\r\nimport EmployeeCreate from './containers/employees/EmployeeCreate';\r\nimport EmployeeDelete from './containers/employees/EmployeeDelete';\r\nimport EmployeeDetails from './containers/employees/EmployeeDetails';\r\nimport EmployeeEdit from './containers/employees/EmployeeEdit';\r\nimport EmployeeIndex from './containers/employees/EmployeeIndex';\r\n\r\nimport InventoryCreate from './containers/inventories/InventoryCreate';\r\nimport InventoryDelete from './containers/inventories/InventoryDelete';\r\nimport InventoryDetails from './containers/inventories/InventoryDetails';\r\nimport InventoryEdit from './containers/inventories/InventoryEdit';\r\nimport InventoryIndex from './containers/inventories/InventoryIndex';\r\n\r\nimport RentalTypeCreate from './containers/rental-types/RentalTypeCreate';\r\nimport RentalTypeDelete from './containers/rental-types/RentalTypeDelete';\r\nimport RentalTypeDetails from './containers/rental-types/RentalTypeDetails';\r\nimport RentalTypeEdit from './containers/rental-types/RentalTypeEdit';\r\nimport RentalTypeIndex from './containers/rental-types/RentalTypeIndex';\r\n\r\nimport RentalCreate from './containers/rentals/RentalCreate';\r\nimport RentalDelete from './containers/rentals/RentalDelete';\r\nimport RentalDetails from './containers/rentals/RentalDetails';\r\nimport RentalEdit from './containers/rentals/RentalEdit';\r\nimport RentalIndex from './containers/rentals/RentalIndex';\r\n\r\nfunction App() {\r\n    const setAuthInfo = (\r\n        token: string | null,\r\n        firstName: string,\r\n        lastName: string,\r\n        role: string,\r\n        culture: string\r\n    ): void => {\r\n\r\n        setAppState(\r\n            {\r\n                ...appState,\r\n                token,\r\n                firstName,\r\n                lastName,\r\n                role,\r\n                culture\r\n            });\r\n    }\r\n\r\n    const [appState, setAppState] = useState({ ...initialAppState, setAuthInfo });\r\n\r\n    if (localStorage.getItem('culture') !== null && appState.culture === \"\") {\r\n        appState.setAuthInfo(\r\n            localStorage.getItem('token'), \r\n            localStorage.getItem('firstName') ?? \"\", \r\n            localStorage.getItem('lastName') ?? \"\",\r\n            localStorage.getItem('role') ?? \"\",\r\n            localStorage.getItem('culture') ?? 'en-US'\r\n            );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <AppContextProvider value={appState} >\r\n                <Header />\r\n                <div className=\"container\">\r\n                    <main role=\"main\" className=\"pb-3\">\r\n                        <Switch>\r\n                            <Route exact path=\"/\" component={HomeIndex} />\r\n\r\n                            <Route path=\"/form\" component={PageForm} />\r\n\r\n                            <Route path=\"/Identity/Login\" component={Login} />\r\n                            <Route path=\"/Identity/Register\" component={Register} />\r\n\r\n                            <Route path=\"/InventoryTypes/Create\" component={InventoryTypeCreate} />\r\n                            <Route path=\"/InventoryTypes/Edit/:id\" component={InventoryTypeEdit} />\r\n                            <Route path=\"/InventoryTypes/Delete/:id\" component={InventoryTypeDelete} />\r\n                            <Route path=\"/InventoryTypes/Details/:id\" component={InventoryTypeDetails} />\r\n                            <Route path=\"/InventoryTypes\" component={InventoryTypeIndex} />\r\n\r\n                            <Route path=\"/Employees/Create\" component={EmployeeCreate} />\r\n                            <Route path=\"/Employees/Edit/:id\" component={EmployeeEdit} />\r\n                            <Route path=\"/Employees/Delete/:id\" component={EmployeeDelete} />\r\n                            <Route path=\"/Employees/Details/:id\" component={EmployeeDetails} />\r\n                            <Route path=\"/Employees\" component={EmployeeIndex} />\r\n\r\n                            <Route path=\"/Inventories/Create\" component={InventoryCreate} />\r\n                            <Route path=\"/Inventories/Edit/:id\" component={InventoryEdit} />\r\n                            <Route path=\"/Inventories/Delete/:id\" component={InventoryDelete} />\r\n                            <Route path=\"/Inventories/Details/:id\" component={InventoryDetails} />\r\n                            <Route path=\"/Inventories\" component={InventoryIndex} />\r\n\r\n                            <Route path=\"/RentalTypes/Create\" component={RentalTypeCreate} />\r\n                            <Route path=\"/RentalTypes/Edit/:id\" component={RentalTypeEdit} />\r\n                            <Route path=\"/RentalTypes/Delete/:id\" component={RentalTypeDelete} />\r\n                            <Route path=\"/RentalTypes/Details/:id\" component={RentalTypeDetails} />\r\n                            <Route path=\"/RentalTypes\" component={RentalTypeIndex} />\r\n\r\n                            <Route path=\"/Rentals/Create\" component={RentalCreate} />\r\n                            <Route path=\"/Rentals/Edit/:id\" component={RentalEdit} />\r\n                            <Route path=\"/Rentals/Delete/:id\" component={RentalDelete} />\r\n                            <Route path=\"/Rentals/Details/:id\" component={RentalDetails} />\r\n                            <Route path=\"/Rentals\" component={RentalIndex} />\r\n                            \r\n                            <Route path=\"/AccessDenied\" component={Page403} />\r\n                            <Route component={Page404} />\r\n                            \r\n                        </Switch>\r\n                    </main>\r\n                </div>\r\n                <Footer />\r\n            </AppContextProvider>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import 'jquery';\nimport 'popper.js';\nimport 'bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport '../src/assets/bootswatch.min.css';\nimport '../src/assets/site.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n    <Router basename={process.env.PUBLIC_URL}>\n        <React.StrictMode>\n            <App />\n        </React.StrictMode>\n    </Router>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}